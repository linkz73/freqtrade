import{r,o,c as d,b as e,d as i,e as s,w as l,a as n}from"./index-1f8801f6.js";const p={class:"md-content__inner md-typeset"},h={class:"admonition note"},u={class:"tabbed-set tabbed-alternate","data-tabs":"1:3"},c={class:"tabbed-content"},g={class:"tabbed-block"},v={class:"admonition note"},b={class:"admonition note"},y={__name:"Installation",setup(f){return(m,t)=>{const a=r("router-link");return o(),d("article",p,[t[54]||(t[54]=e("h1",{id:"installation"},[i(" 설치 "),e("a",{class:"headerlink",href:"#installation",title:"영구 링크"}," ¶ ")],-1)),t[55]||(t[55]=e("p",null,"이 문서는 Freqtrade 봇을 실행하기 위한 환경 설정 방법을 안내합니다.",-1)),t[56]||(t[56]=e("p",null,"Freqtrade는 다음과 같은 다양한 설치 방법을 제공합니다:",-1)),e("ul",null,[e("li",null,[s(a,{to:"docker-quickstart"},{default:l(()=>t[0]||(t[0]=[i("Docker 컨테이너")])),_:1}),t[1]||(t[1]=i(" (별도 페이지) "))]),t[2]||(t[2]=e("li",null,[e("a",{href:"#script-installation"},"스크립트 설치")],-1)),t[3]||(t[3]=e("li",null,[e("a",{href:"#manual-installation"},"수동 설치")],-1)),t[4]||(t[4]=e("li",null,[e("a",{href:"#installation-with-conda"},"Conda 설치")],-1))]),e("p",null,[t[6]||(t[6]=i(" Freqtrade의 기능을 빠르게 테스트해보고 싶다면, 미리 구성된 ")),s(a,{to:"docker-quickstart"},{default:l(()=>t[5]||(t[5]=[i("Docker 컨테이너")])),_:1}),t[7]||(t[7]=i(" 를 사용하는 것을 추천합니다. "))]),t[57]||(t[57]=e("hr",null,null,-1)),t[58]||(t[58]=e("h2",{id:"information"},[i(" 정보 "),e("a",{class:"headerlink",href:"#information",title:"영구 링크"}," ¶ ")],-1)),e("p",null,[t[9]||(t[9]=i(" Windows 설치의 경우 ")),s(a,{to:"windows-installation"},{default:l(()=>t[8]||(t[8]=[i("Windows 설치 가이드")])),_:1}),t[10]||(t[10]=i(" 를 참조하세요. "))]),t[59]||(t[59]=n(`<p> Freqtrade를 설치하고 실행하는 가장 쉬운 방법은 GitHub 저장소를 클론한 다음 플랫폼에 맞는 <code>./setup.sh</code> 스크립트를 실행하는 것입니다. </p><div class="admonition note"><p class="admonition-title">버전 안내</p><p>저장소를 클론하면 기본적으로 <code>develop</code> 브랜치가 선택됩니다. 이 브랜치는 최신 기능을 포함하며, 자동화된 테스트를 통해 상대적으로 안정적입니다. <code>stable</code> 브랜치는 최신 릴리스를 포함하며, 일반적으로 한 달에 한 번, 약 일주일 전의 <code>develop</code> 브랜치 스냅샷을 기반으로 릴리스됩니다.</p></div><div class="admonition note"><p class="admonition-title">참고</p><p> Python 3.10 이상과 해당 <code>pip</code> 이 사용 가능해야 합니다. 설치 스크립트는 그렇지 않은 경우 경고를 표시하고 중지됩니다. <code>git</code> 도 Freqtrade 저장소를 클론하는 데 필요합니다. <br> 또한 설치가 성공적으로 완료되려면 Python 헤더( <code>python&lt;버전&gt;-dev</code> / <code>python&lt;버전&gt;-devel</code> )가 사용 가능해야 합니다. </p></div><div class="admonition warning"><p class="admonition-title">정확한 시계</p><p>봇을 실행하는 시스템의 시계는 정확해야 하며, 거래소와의 통신 문제를 방지하기 위해 NTP 서버와 자주 동기화되어야 합니다.</p></div><hr><h2 id="system-requirements"> 시스템 요구사항 <a class="headerlink" href="#system-requirements" title="영구 링크"> ¶ </a></h2><p>Freqtrade를 실행하기 위한 최소 시스템 요구사항은 다음과 같습니다:</p><ul><li>Python 3.10 이상</li><li>최소 4GB RAM</li><li>최소 10GB 디스크 공간</li><li>안정적인 인터넷 연결</li></ul><p>더 나은 성능을 위해서는 다음 사양을 권장합니다:</p><ul><li>Python 3.11 이상</li><li>8GB 이상의 RAM</li><li>SSD 저장 장치</li><li>고속 인터넷 연결</li></ul><hr><h2 id="requirements"> 필수 요구사항 <a class="headerlink" href="#requirements" title="영구 링크"> ¶ </a></h2><p>Freqtrade를 설치하기 전에 다음 요구사항을 확인하세요:</p><ul><li>Python 3.10 이상이 설치되어 있어야 합니다.</li><li>pip (Python 패키지 관리자)가 설치되어 있어야 합니다.</li><li>시스템에 git이 설치되어 있어야 합니다.</li><li>필요한 시스템 패키지가 설치되어 있어야 합니다.</li></ul><p>시스템 패키지 설치 방법:</p><div class="highlight"><pre><code class="language-bash"># Ubuntu/Debian
sudo apt-get update
sudo apt-get install python3-pip python3-venv git

# macOS
brew install python3 git

# Windows
# Python과 Git을 각각 다운로드하여 설치</code></pre></div>`,16)),e("div",h,[t[14]||(t[14]=e("p",{class:"admonition-title"},"ARM64 시스템",-1)),e("p",null,[t[12]||(t[12]=i(" ARM64 시스템(MacOS M1 또는 Oracle VM과 같은)을 실행 중인 경우 ")),s(a,{to:"docker-quickstart"},{default:l(()=>t[11]||(t[11]=[i("Docker")])),_:1}),t[13]||(t[13]=i(" 를 사용하여 Freqtrade를 실행하세요. 네이티브 설치는 수동 작업이 필요하지만 현재는 지원되지 않습니다. "))])]),t[60]||(t[60]=n('<h3 id="quick-start"> 빠른 시작 <a class="headerlink" href="#quick-start" title="영구 링크"> ¶ </a></h3><p>Linux와 macOS에서는 다음 명령어로 Freqtrade를 빠르게 설치할 수 있습니다:</p><div class="highlight"><pre><code class="language-bash">curl https://raw.githubusercontent.com/freqtrade/freqtrade/stable/scripts/install_linux.sh | bash</code></pre></div><p>Windows에서는 다음 명령어를 사용하세요:</p><div class="highlight"><pre><code class="language-powershell">Set-ExecutionPolicy Bypass -Scope Process -Force; Invoke-Expression ((New-Object System.Net.WebClient).DownloadString(&#39;https://raw.githubusercontent.com/freqtrade/freqtrade/stable/scripts/install_windows.ps1&#39;))</code></pre></div><p>이 스크립트는 Python 3.10+, pip, git, virtualenv를 설치하고, Freqtrade 저장소를 클론한 후 가상 환경을 생성하고 필요한 의존성을 설치합니다.</p><h3 id="install-guide"> 설치 가이드 <a class="headerlink" href="#install-guide" title="영구 링크"> ¶ </a></h3><ul><li><a href="http://docs.python-guide.org/en/latest/starting/installation/">Python 3.10 이상</a></li><li><a href="https://pip.pypa.io/en/stable/installing/">pip</a></li><li><a href="https://git-scm.com/book/en/v2/Getting-Started-Installing-Git">git</a></li><li><a href="https://virtualenv.pypa.io/en/stable/installation.html">virtualenv</a> (권장) </li><li><a href="https://ta-lib.github.io/ta-lib-python/">TA-Lib</a> (설치 방법은 <a href="#install-ta-lib">아래</a> 참조) </li></ul><h3 id="install-code"> 설치 코드 <a class="headerlink" href="#install-code" title="영구 링크"> ¶ </a></h3><p>우리는 Ubuntu, MacOS 및 Windows에 대한 설치 지침을 포함/수집했습니다. 이는 가이드라인이며 다른 배포판에서는 성공 여부가 다를 수 있습니다. OS별 단계가 먼저 나열되며, 아래의 공통 섹션은 모든 시스템에 필요합니다.</p><div class="admonition note"><p class="admonition-title">참고</p><p>Python 3.10 이상과 해당 pip이 사용 가능해야 합니다.</p></div>',11)),e("div",u,[t[24]||(t[24]=n('<input checked="checked" id="__tabbed_1_1" name="__tabbed_1" type="radio"><input id="__tabbed_1_2" name="__tabbed_1" type="radio"><input id="__tabbed_1_3" name="__tabbed_1" type="radio"><div class="tabbed-labels"><label for="__tabbed_1_1">Debian/Ubuntu</label><label for="__tabbed_1_2">MacOS</label><label for="__tabbed_1_3">RaspberryPi/Raspbian</label></div>',4)),e("div",c,[t[23]||(t[23]=n(`<div class="tabbed-block"><h4 id="install-necessary-dependencies"> 필요한 종속성 설치 <a class="headerlink" href="#install-necessary-dependencies" title="영구 링크"> ¶ </a></h4><div class="highlight"><pre><code><span class="c1"># 저장소 업데이트</span>
sudo apt-get update

<span class="c1"># 패키지 설치</span>
sudo apt install -y python3-pip python3-venv python3-dev python3-pandas git curl</code></pre></div></div><div class="tabbed-block"><h4 id="install-necessary-dependencies_1"> 필요한 종속성 설치 <a class="headerlink" href="#install-necessary-dependencies_1" title="영구 링크"> ¶ </a></h4><p><a href="https://brew.sh/">Homebrew</a> 가 설치되어 있지 않은 경우 설치하십시오. </p><div class="highlight"><pre><code><span class="c1"># 패키지 설치</span>
brew install gettext libomp</code></pre></div><div class="admonition note"><p class="admonition-title">참고</p><p><code>setup.sh</code> 스크립트는 Homebrew가 시스템에 설치되어 있다고 가정하고 이러한 종속성을 설치합니다. </p></div></div>`,2)),e("div",g,[t[19]||(t[19]=e("p",null,[i(" 다음은 최신 "),e("a",{href:"https://www.raspberrypi.org/downloads/raspbian/"},"Raspbian Buster lite 이미지"),i(" 를 가정합니다. 이 이미지는 python3.11이 사전 설치되어 있어 Freqtrade를 쉽게 실행할 수 있습니다. ")],-1)),t[20]||(t[20]=e("p",null,"Raspbian Buster lite 이미지와 모든 업데이트가 적용된 Raspberry Pi 3에서 테스트되었습니다.",-1)),t[21]||(t[21]=e("div",{class:"highlight"},[e("pre",null,[e("code",null,[i(`sudo apt-get install python3-venv libatlas-base-dev cmake curl
`),e("span",{class:"c1"},"# 설치 속도를 높이기 위해 piwheels.org 사용"),i(`
sudo echo "[global]\\nextra-index-url=https://www.piwheels.org/simple" > tee /etc/pip.conf

git clone https://github.com/freqtrade/freqtrade.git
cd freqtrade

bash setup.sh -i`)])])],-1)),e("div",v,[t[18]||(t[18]=e("p",{class:"admonition-title"},"설치 시간",-1)),e("p",null,[t[16]||(t[16]=i(" 인터넷 속도와 Raspberry Pi 버전에 따라 설치가 완료되는 데 여러 시간이 걸릴 수 있습니다. 따라서 Raspberry Pi용으로 미리 빌드된 Docker 이미지를 사용하는 것이 좋습니다. 자세한 내용은 ")),s(a,{to:"docker-quickstart"},{default:l(()=>t[15]||(t[15]=[i("Docker 빠른 시작 문서")])),_:1}),t[17]||(t[17]=i(" 를 참조하십시오. "))])]),t[22]||(t[22]=e("div",{class:"admonition note"},[e("p",{class:"admonition-title"},"참고"),e("p",null,[i(" 위의 내용은 hyperopt 종속성을 설치하지 않습니다. 이를 설치하려면 "),e("code",null,"python3 -m pip install -e .[hyperopt]"),i(" 를 사용하십시오. Raspberry Pi에서 hyperopt를 실행하는 것은 매우 리소스를 많이 사용하는 작업이므로 강력한 컴퓨터에서 수행하는 것이 좋습니다. ")])],-1))])])]),t[61]||(t[61]=n(`<hr><h2 id="freqtrade-repository"> Freqtrade 저장소 <a class="headerlink" href="#freqtrade-repository" title="영구 링크"> ¶ </a></h2><p> Freqtrade는 오픈 소스 암호화폐 거래 봇으로, 코드는 <code>github.com</code> 에 호스팅됩니다. </p><div class="highlight"><pre><code><span class="c1"># Freqtrade 저장소의 \`develop\` 브랜치 다운로드</span>
git clone https://github.com/freqtrade/freqtrade.git

<span class="c1"># 다운로드한 디렉토리로 이동</span>
cd freqtrade

<span class="c1"># 선택 사항 (1): 초보 사용자</span>
git checkout stable

<span class="c1"># 선택 사항 (2): 고급 사용자</span>
git checkout develop</code></pre></div><p> (1) 이 명령은 클론된 저장소를 <code>stable</code> 브랜치로 전환합니다. (2) <code>develop</code> 브랜치에 머물고 싶은 경우 필요하지 않습니다. </p><p> 나중에 <code>git checkout stable</code> / <code>git checkout develop</code> 명령을 사용하여 언제든지 브랜치를 전환할 수 있습니다. </p><details class="note"><summary>pypi에서 설치</summary><p> Freqtrade를 설치하는 또 다른 방법은 <a href="https://pypi.org/project/freqtrade/">pypi</a> 에서 설치하는 것입니다. 이 방법의 단점은 이 방법이 사전에 ta-lib가 올바르게 설치되어 있어야 하므로 현재 권장되는 설치 방법이 아니라는 것입니다. </p><div class="highlight"><pre><code>pip install freqtrade</code></pre></div></details><hr><h2 id="script-installation"> 스크립트 설치 <a class="headerlink" href="#script-installation" title="영구 링크"> ¶ </a></h2><p> Freqtrade를 설치하는 첫 번째 방법은 제공된 Linux/MacOS <code>./setup.sh</code> 스크립트를 사용하여 모든 종속성을 설치하고 봇을 구성하는 것입니다. </p><p><a href="#requirements">요구 사항</a> 을 충족하고 <a href="#freqtrade-repository">Freqtrade 저장소</a> 를 다운로드했는지 확인하세요. </p><h3 id="use-setupsh-install-linuxmacos"> /setup.sh -install 사용 (Linux/MacOS) <a class="headerlink" href="#use-setupsh-install-linuxmacos" title="영구 링크"> ¶ </a></h3><p>Debian, Ubuntu 또는 MacOS를 사용하는 경우 Freqtrade는 Freqtrade를 설치하는 스크립트를 제공합니다.</p><div class="highlight"><pre><code><span class="c1"># --install, Freqtrade를 처음부터 설치</span>
./setup.sh -i</code></pre></div><h3 id="activate-your-virtual-environment"> 가상 환경 활성화 <a class="headerlink" href="#activate-your-virtual-environment" title="영구 링크"> ¶ </a></h3><p> 새 터미널을 열 때마다 <code>source .venv/bin/activate</code> 를 실행하여 가상 환경을 활성화해야 합니다. </p><div class="highlight"><pre><code><span class="c1"># 가상 환경 활성화</span>
source ./.venv/bin/activate</code></pre></div><p><a href="#you-are-ready">이제 봇을 실행할 준비가 되었습니다.</a></p><h3 id="other-options-of-setupsh-script"> /setup.sh 스크립트의 다른 옵션 <a class="headerlink" href="#other-options-of-setupsh-script" title="영구 링크"> ¶ </a></h3><p><code>./script.sh</code> 을 사용하여 봇의 코드베이스를 업데이트, 구성 및 재설정할 수도 있습니다. </p><div class="highlight"><pre><code><span class="c1"># --update, 업데이트를 위해 git pull 명령 실행.</span>
./setup.sh -u
<span class="c1"># --reset, develop/stable 브랜치를 강제로 재설정.</span>
./setup.sh -r</code></pre></div><div class="highlight"><pre><code>** --install **

이 옵션을 사용하면 스크립트가 봇과 대부분의 종속성을 설치합니다:
이를 위해서는 사전에 git 및 python3.10+이 설치되어 있어야 합니다.

* 필수 소프트웨어: \`ta-lib\`
* \`.venv/\`에 가상 환경 설정

이 옵션은 설치 작업과 \`--reset\`의 조합입니다.

** --update **

이 옵션은 현재 브랜치의 최신 버전을 가져오고 가상 환경을 업데이트합니다. 이 옵션을 사용하여 주기적으로 스크립트를 실행하여 봇을 업데이트하십시오.

** --reset **

이 옵션은 브랜치가 \`stable\` 또는 \`develop\`인 경우에만 브랜치를 강제로 재설정하고 가상 환경을 다시 만듭니다.</code></pre></div><hr><h2 id="manual-installation"> 수동 설치 <a class="headerlink" href="#manual-installation" title="영구 링크"> ¶ </a></h2><p><a href="#requirements">요구 사항</a> 을 충족하고 <a href="#freqtrade-repository">Freqtrade 저장소</a> 를 다운로드했는지 확인하세요. </p><h3 id="install-ta-lib"> TA-Lib 설치 <a class="headerlink" href="#install-ta-lib" title="영구 링크"> ¶ </a></h3><h4 id="ta-lib-script-installation"> TA-Lib 스크립트 설치 <a class="headerlink" href="#ta-lib-script-installation" title="영구 링크"> ¶ </a></h4><div class="highlight"><pre><code>sudo ./build_helpers/install_ta-lib.sh</code></pre></div><div class="admonition note"><p class="admonition-title">참고</p><p>이 스크립트는 이 저장소에 포함된 ta-lib tar.gz를 사용합니다.</p></div><h5 id="ta-lib-manual-installation"> TA-Lib 수동 설치 <a class="headerlink" href="#ta-lib-manual-installation" title="영구 링크"> ¶ </a></h5><p><a href="https://ta-lib.github.io/ta-lib-python/install.html">공식 설치 가이드</a></p><div class="highlight"><pre><code>wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
tar xvzf ta-lib-0.4.0-src.tar.gz
cd ta-lib
sed -i.bak &quot;s|0.00000001|0.000000000000000001 |g&quot; src/ta_func/ta_utility.h
./configure --prefix=/usr/local
make
sudo make install
<span class="c1"># Debian 기반 시스템(debian, ubuntu 등)에서는 ldconfig 업데이트가 필요할 수 있습니다.</span>
sudo ldconfig  
cd ..
rm -rf ./ta-lib*</code></pre></div><h3 id="setup-python-virtual-environment-virtualenv"> 파이썬 가상 환경 설정 (virtualenv) <a class="headerlink" href="#setup-python-virtual-environment-virtualenv" title="영구 링크"> ¶ </a></h3><p> Freqtrade를 별도의 <code>virtual environment</code> 에서 실행합니다. </p><div class="highlight"><pre><code><span class="c1"># /freqtrade/.venv 디렉토리에 가상 환경 생성</span>
python3 -m venv .venv

<span class="c1"># 가상 환경 실행</span>
source .venv/bin/activate</code></pre></div><h3 id="install-python-dependencies"> 파이썬 종속성 설치 <a class="headerlink" href="#install-python-dependencies" title="영구 링크"> ¶ </a></h3><div class="highlight"><pre><code>python3 -m pip install --upgrade pip
python3 -m pip install -r requirements.txt
<span class="c1"># freqtrade 설치</span>
python3 -m pip install -e .</code></pre></div><p><a href="#you-are-ready">이제 준비가 완료되었습니다.</a> 봇을 실행할 수 있습니다. </p><h3 id="optional-post-installation-tasks"> (선택 사항) 설치 후 작업 <a class="headerlink" href="#optional-post-installation-tasks" title="영구 링크"> ¶ </a></h3>`,39)),e("div",b,[t[32]||(t[32]=e("p",{class:"admonition-title"},"참고",-1)),e("p",null,[t[26]||(t[26]=i(" 서버에서 봇을 실행하는 경우 ")),s(a,{to:"docker-quickstart"},{default:l(()=>t[25]||(t[25]=[i("Docker")])),_:1}),t[27]||(t[27]=i(" 또는 ")),t[28]||(t[28]=e("code",null,"screen",-1)),t[29]||(t[29]=i(" 과 같은 터미널 멀티플렉서를 사용하거나 ")),t[30]||(t[30]=e("a",{href:"https://en.wikipedia.org/wiki/Tmux"},[e("code",null,"tmux")],-1)),t[31]||(t[31]=i(" 를 사용하여 로그아웃 시 봇이 중지되지 않도록 고려하세요. "))])]),e("p",null,[t[34]||(t[34]=i(" Linux에서 ")),t[35]||(t[35]=e("code",null,"systemd",-1)),t[36]||(t[36]=i(" 소프트웨어 스위트를 사용하는 경우, 선택적으로 봇을 ")),t[37]||(t[37]=e("code",null,"systemd 서비스",-1)),t[38]||(t[38]=i(" 로 실행하거나 로그 메시지를 ")),t[39]||(t[39]=e("code",null,"syslog",-1)),t[40]||(t[40]=i(" / ")),t[41]||(t[41]=e("code",null,"rsyslog",-1)),t[42]||(t[42]=i(" 또는 ")),t[43]||(t[43]=e("code",null,"journald",-1)),t[44]||(t[44]=i(" 데몬으로 전송하도록 설정할 수 있습니다. 자세한 내용은 ")),s(a,{to:"advanced-setup"},{default:l(()=>t[33]||(t[33]=[i("고급 로깅")])),_:1}),t[45]||(t[45]=i(" 을 참조하세요. "))]),t[62]||(t[62]=n(`<hr><h2 id="installation-with-conda"> Conda를 사용한 설치 <a class="headerlink" href="#installation-with-conda" title="영구 링크"> ¶ </a></h2><p>Conda를 사용하여 Freqtrade를 설치하려면 다음 단계를 따르세요:</p><div class="highlight"><pre><code><span class="c1"># 저장소 클론</span>
git clone https://github.com/freqtrade/freqtrade.git
cd freqtrade

<span class="c1"># stable 브랜치 선택</span>
git checkout stable

<span class="c1"># Conda 환경 생성</span>
conda env create -n freqtrade -f environment.yml

<span class="c1"># Conda 환경 활성화</span>
conda activate freqtrade

<span class="c1"># 의존성 설치</span>
pip install -e .</code></pre></div><hr><h2 id="you-are-ready"> 이제 준비가 완료되었습니다 <a class="headerlink" href="#you-are-ready" title="영구 링크"> ¶ </a></h2><p>여기까지 오셨다면 Freqtrade를 성공적으로 설치하신 것입니다.</p><h3 id="initialize-the-configuration"> 구성 초기화 <a class="headerlink" href="#initialize-the-configuration" title="영구 링크"> ¶ </a></h3><div class="highlight"><pre><code><span class="c1"># 1단계 - 사용자 폴더 초기화</span>
freqtrade create-userdir --userdir user_data

<span class="c1"># 2단계 - 새 구성 파일 생성</span>
freqtrade new-config --config user_data/config.json</code></pre></div>`,9)),e("p",null,[t[47]||(t[47]=i(" 이제 실행할 준비가 되었습니다. ")),s(a,{to:"configuration"},{default:l(()=>t[46]||(t[46]=[i("봇 구성")])),_:1}),t[48]||(t[48]=i(" 을 읽고, ")),t[49]||(t[49]=e("code",null,"dry_run: True",-1)),t[50]||(t[50]=i(" 로 시작하여 모든 것이 제대로 작동하는지 확인하세요. "))]),e("p",null,[t[52]||(t[52]=i(" 구성을 설정하는 방법을 배우려면 ")),s(a,{to:"configuration"},{default:l(()=>t[51]||(t[51]=[i("봇 구성")])),_:1}),t[53]||(t[53]=i(" 문서 페이지를 참조하세요. "))]),t[63]||(t[63]=n(`<h3 id="start-the-bot"> 봇 시작 <a class="headerlink" href="#start-the-bot" title="영구 링크"> ¶ </a></h3><div class="highlight"><pre><code>freqtrade trade --config user_data/config.json --strategy SampleStrategy</code></pre></div><div class="admonition warning"><p class="admonition-title">경고</p><p>문서를 끝까지 읽고, 사용할 전략을 백테스트하며, 실제 거래를 활성화하기 전에 드라이런(dry-run)을 사용하여 확인하세요.</p></div><hr><h2 id="troubleshooting"> 문제 해결 <a class="headerlink" href="#troubleshooting" title="영구 링크"> ¶ </a></h2><h3 id="common-problem-command-not-found"> 일반적인 문제: &quot;명령을 찾을 수 없음&quot; <a class="headerlink" href="#common-problem-command-not-found" title="영구 링크"> ¶ </a></h3><p> (1) <code>스크립트</code> 또는 (2) <code>수동</code> 설치를 사용한 경우, 가상 환경에서 봇을 실행해야 합니다. 아래와 같은 오류가 발생하면 venv가 활성화되어 있는지 확인하세요. </p><div class="highlight"><pre><code><span class="c1"># 오류 발생 시:</span>
bash: freqtrade: command not found

<span class="c1"># 가상 환경 활성화</span>
source ./.venv/bin/activate</code></pre></div><h3 id="macos-installation-error"> MacOS 설치 오류 <a class="headerlink" href="#macos-installation-error" title="영구 링크"> ¶ </a></h3><p> 최신 MacOS 버전에서는 <code>error: command &#39;g++&#39; failed with exit status 1</code> 와 같은 오류로 설치가 실패할 수 있습니다. </p><p>이 오류는 기본적으로 설치되지 않은 SDK 헤더를 명시적으로 설치해야 해결됩니다. MacOS 10.14의 경우 아래 명령을 사용하세요.</p><div class="highlight"><pre><code>open /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg</code></pre></div><p>이 파일이 존재하지 않는 경우, 다른 MacOS 버전을 사용 중일 가능성이 있으므로 인터넷에서 특정 해결 방법을 찾아보세요.</p><h3 id="docker-installation"> Docker 설치 <a class="headerlink" href="#docker-installation" title="영구 링크"> ¶ </a></h3><p>Docker를 사용하여 Freqtrade를 설치하려면 다음 단계를 따르세요:</p><div class="highlight"><pre><code class="language-bash"># Docker 이미지 다운로드
docker pull freqtradeorg/freqtrade:stable

# Docker 컨테이너 실행
docker run -it \\
  -v &quot;path_to_user_data:/freqtrade/user_data&quot; \\
  freqtradeorg/freqtrade:stable new-config --config user_data/config.json</code></pre></div><p>Docker를 사용하면 시스템에 Python이나 다른 의존성을 설치할 필요 없이 Freqtrade를 실행할 수 있습니다.</p><h3 id="installation-issues"> 설치 문제 해결 <a class="headerlink" href="#installation-issues" title="영구 링크"> ¶ </a></h3><p>설치 과정에서 문제가 발생하면 다음을 확인하세요:</p><ul><li>Python 버전이 3.10 이상인지 확인</li><li>필수 시스템 패키지가 설치되어 있는지 확인</li><li>가상 환경이 올바르게 활성화되었는지 확인</li><li>의존성 설치 시 오류 메시지를 확인</li></ul><p>문제가 지속되면 Freqtrade 커뮤니티에서 도움을 받을 수 있습니다.</p><h3 id="installation-methods"> 설치 방법 <a class="headerlink" href="#installation-methods" title="영구 링크"> ¶ </a></h3><p>Freqtrade는 다음과 같은 방법으로 설치할 수 있습니다:</p><ol><li><strong>pip를 사용한 설치 (권장)</strong><p>pip를 사용하면 가장 간단하고 빠르게 Freqtrade를 설치할 수 있습니다:</p><div class="highlight"><pre><code class="language-bash">pip install freqtrade</code></pre></div></li><li><strong>Docker를 사용한 설치</strong><p>Docker를 사용하면 환경 설정에 신경 쓸 필요 없이 바로 실행할 수 있습니다:</p><div class="highlight"><pre><code class="language-bash">docker pull freqtradeorg/freqtrade:stable
docker run -it -v &quot;$(pwd)/user_data:/freqtrade/user_data&quot; freqtradeorg/freqtrade:stable</code></pre></div></li><li><strong>소스 코드에서 직접 설치</strong><p>GitHub에서 소스 코드를 다운로드하여 직접 설치할 수도 있습니다:</p><div class="highlight"><pre><code class="language-bash">git clone https://github.com/freqtrade/freqtrade.git
cd freqtrade
./setup.sh -i</code></pre></div></li></ol><h3 id="post-installation"> 설치 후 설정 <a class="headerlink" href="#post-installation" title="영구 링크"> ¶ </a></h3><p>Freqtrade 설치가 완료되면 다음 단계를 진행하세요:</p><ol><li><strong>설정 파일 생성</strong><p>기본 설정 파일을 생성합니다:</p><div class="highlight"><pre><code class="language-bash">freqtrade new-config -c config.json</code></pre></div></li><li><strong>API 키 설정</strong><p>거래소 API 키를 config.json 파일에 설정합니다. API 키는 절대 공개되지 않도록 주의하세요.</p></li><li><strong>전략 설정</strong><p>거래 전략을 선택하고 설정합니다. 기본 전략을 사용하거나 직접 전략을 작성할 수 있습니다:</p><div class="highlight"><pre><code class="language-bash">freqtrade new-strategy --strategy MyAwesomeStrategy</code></pre></div></li></ol><div class="admonition warning"><p class="admonition-title">주의</p><p>실제 거래를 시작하기 전에 반드시 백테스트와 페이퍼 트레이딩으로 전략을 충분히 테스트하세요. 실제 자금으로 거래할 때는 위험을 충분히 인지하고 진행하세요.</p></div>`,28))])}}};export{y as default};
