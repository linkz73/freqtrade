import{r as e,o as i,c,a as o,b as a,e as t,w as l,d as p}from"./index-eb65bd0c.js";const d={class:"md-content__inner md-typeset"},g={__name:"Stoploss",setup(r){return(_,s)=>{const n=e("router-link");return i(),c("article",d,[s[9]||(s[9]=o(`<h1 id="stop-loss"> 스탑로스 (Stop Loss) <a class="headerlink" href="#stop-loss" title="영구 링크"> ¶ </a></h1><p><code>stoploss</code> 설정 파라미터는 손실 비율로, 특정 손실 비율에 도달하면 매도를 트리거합니다. 예를 들어, 값이 <code>-0.10</code>이면, 특정 거래에서 수익이 -10% 아래로 떨어질 경우 즉시 매도합니다. 이 파라미터는 선택 사항입니다. 스탑로스 계산에는 수수료가 포함되므로, -10%의 스탑로스는 진입점에서 정확히 10% 아래에 설정됩니다.</p><p>대부분의 전략 파일에는 이미 최적의 <code>stoploss</code> 값이 포함되어 있습니다.</p><div class="admonition info"><p class="admonition-title">정보</p><p> 이 파일에서 언급된 모든 스탑로스 속성은 전략 또는 설정에서 설정할 수 있습니다. <br><ins>설정 값은 전략 값을 덮어씁니다.</ins></p></div><h2 id="stop-loss-on-exchangefreqtrade"> 스탑로스: 거래소/프리퀀시트레이드 <a class="headerlink" href="#stop-loss-on-exchangefreqtrade" title="영구 링크"> ¶ </a></h2><p>스탑로스 모드는 <em>거래소에서 실행</em>되거나 <em>거래소 외부에서 실행</em>될 수 있습니다.</p><p>이 모드는 다음 값으로 설정할 수 있습니다:</p><div class="highlight"><pre><code>    <span class="s1">&#39;emergency_exit&#39;</span><span class="p">:</span> <span class="s1">&#39;market&#39;</span><span class="p">,</span>
    <span class="s1">&#39;stoploss_on_exchange&#39;</span><span class="p">:</span> <span class="kc">False</span>
    <span class="s1">&#39;stoploss_on_exchange_interval&#39;</span><span class="p">:</span> <span class="mi">60</span><span class="p">,</span>
    <span class="s1">&#39;stoploss_on_exchange_limit_ratio&#39;</span><span class="p">:</span> <span class="mf">0.99</span>
</code></pre></div><p>거래소에서 스탑로스는 특정 거래소에서만 지원되며, 모든 거래소가 스탑-리밋과 스탑-마켓을 모두 지원하지는 않습니다. 한 가지 모드만 사용 가능한 경우 주문 유형은 무시됩니다.</p><table><thead><tr><th>거래소</th><th>스탑로스 유형</th></tr></thead><tbody><tr><td>바이낸스</td><td>리밋</td></tr><tr><td>바이낸스 선물</td><td>마켓, 리밋</td></tr><tr><td>빙엑스</td><td>마켓, 리밋</td></tr><tr><td>HTX</td><td>리밋</td></tr><tr><td>크라켄</td><td>마켓, 리밋</td></tr><tr><td>게이트</td><td>리밋</td></tr><tr><td>OKX</td><td>리밋</td></tr><tr><td>쿠코인</td><td>스탑-리밋, 스탑-마켓</td></tr><tr><td>하이퍼리퀴드 (선물 전용)</td><td>리밋</td></tr></tbody></table><div class="admonition note"><p class="admonition-title">주의</p><p><ins>거래소에서 스탑로스를 사용할 때 너무 낮거나 빡빡한 값을 설정하지 마세요!</ins><br> 너무 낮게 설정하면 주문이 체결되지 않을 위험이 커지고, 스탑로스가 작동하지 않을 수 있습니다. </p></div><h3 id="stoploss_on_exchange-and-stoploss_on_exchange_limit_ratio"> stoploss_on_exchange 및 stoploss_on_exchange_limit_ratio <a class="headerlink" href="#stoploss_on_exchange-and-stoploss_on_exchange_limit_ratio" title="영구 링크"> ¶ </a></h3><p>거래소에서 스탑로스를 활성화하거나 비활성화합니다. 스탑로스가 <em>거래소에서 실행</em>되면, 매수 주문이 체결된 직후 거래소에 스탑로스 리밋 주문이 배치됩니다. 이는 순수하게 거래소 내에서 주문이 실행되므로 잠재적인 네트워크 오버헤드 없이 시장의 갑작스러운 폭락으로부터 보호해줍니다.</p><p><code>stoploss_on_exchange</code>가 리밋 주문을 사용하는 경우, 거래소는 두 가지 가격, 즉 스탑로스 가격과 리밋 가격이 필요합니다. <br><code>stoploss</code>는 리밋 주문이 배치되는 스탑 가격을 정의하며, 리밋은 이보다 약간 아래에 있어야 합니다. <br> 거래소가 리밋 및 마켓 스탑로스 주문을 모두 지원하는 경우, <code>stoploss</code> 값이 스탑로스 유형을 결정하는 데 사용됩니다. </p><p> 계산 예시: 자산을 100$에 매수했습니다. <br> 스탑 가격이 95$이면, 리밋은 <code>95 * 0.99 = 94.05$</code>가 됩니다. 따라서 리밋 주문 체결은 95$와 94.05$ 사이에서 이루어질 수 있습니다. </p><p>예를 들어, 스탑로스가 거래소에서 실행되고 트레일링 스탑로스가 활성화된 상태에서 시장이 상승하면, 봇은 이전 스탑로스 주문을 자동으로 취소하고 이전 스탑로스 주문보다 높은 스탑 값으로 새 주문을 배치합니다.</p><div class="admonition note"><p class="admonition-title">참고</p><p><code>stoploss_on_exchange</code>가 활성화된 상태에서 거래소에서 스탑로스가 수동으로 취소되면, 봇은 새 스탑로스 주문을 생성합니다.</p></div><h3 id="stoploss_on_exchange_interval"> stoploss_on_exchange_interval <a class="headerlink" href="#stoploss_on_exchange_interval" title="영구 링크"> ¶ </a></h3><p> 거래소에서 스탑로스를 사용할 경우 <code>stoploss_on_exchange_interval</code>이라는 또 다른 파라미터가 있습니다. 이 파라미터는 봇이 스탑로스를 확인하고 필요 시 업데이트하는 간격(초)을 설정합니다. <br> 봇은 5초마다(각 반복마다) 이를 수행할 수 없으므로, 거래소에서 차단될 수 있습니다. 따라서 이 파라미터는 봇이 스탑로스 주문을 얼마나 자주 업데이트해야 하는지 알려줍니다. 기본 값은 60초(1분)입니다. 이 동일한 로직은 실수로 스탑로스 주문을 취소한 경우 거래소에서 스탑로스 주문을 다시 적용합니다. </p><h3 id="stoploss_price_type"> stoploss_price_type <a class="headerlink" href="#stoploss_price_type" title="영구 링크"> ¶ </a></h3><div class="admonition warning"><p class="admonition-title">선물에만 적용</p><p><code>stoploss_price_type</code>은 선물 시장(사용 가능한 거래소에서만)에만 적용됩니다. 프리퀀시트레이드는 이 설정에 대한 유효성을 시작 시 검증하며, 거래소에 대해 잘못된 설정이 선택된 경우 시작에 실패합니다. 지원되는 가격 유형은 거래소마다 다를 수 있습니다. 거래소에서 지원하는 가격 유형을 확인하세요.</p></div><p>선물 시장에서 거래소에서 스탑로스는 다양한 가격 유형에서 트리거될 수 있습니다. 거래소 용어에서 이러한 가격의 명칭은 종종 다르지만, 일반적으로 &quot;마지막&quot; (또는 &quot;계약 가격&quot;), &quot;마크&quot; 및 &quot;인덱스&quot;와 유사합니다.</p><p>이 설정에 대한 허용 값은 <code>&quot;last&quot;</code>, <code>&quot;mark&quot;</code> 및 <code>&quot;index&quot;</code>이며, 프리퀀시트레이드는 이를 자동으로 해당 API 유형으로 변환하고, <a href="#stoploss_on_exchange-and-stoploss_on_exchange_limit_ratio">거래소에서 스탑로스</a> 주문을 적절히 배치합니다.</p><h3 id="force_exit"> force_exit <a class="headerlink" href="#force_exit" title="영구 링크"> ¶ </a></h3><p><code>force_exit</code>은 선택적 값으로, 기본적으로 <code>exit</code>와 동일한 값이며, 텔레그램 또는 REST API에서 <code>/forceexit</code> 명령을 보낼 때 사용됩니다.</p><h3 id="force_entry"> force_entry <a class="headerlink" href="#force_entry" title="영구 링크"> ¶ </a></h3><p><code>force_entry</code>은 선택적 값으로, 기본적으로 <code>entry</code>와 동일한 값이며, 텔레그램 또는 REST API에서 <code>/forceentry</code> 명령을 보낼 때 사용됩니다.</p><h3 id="emergency_exit"> emergency_exit <a class="headerlink" href="#emergency_exit" title="영구 링크"> ¶ </a></h3><p><code>emergency_exit</code>은 선택적 값으로, 기본적으로 <code>market</code>이며, 거래소에서 스탑로스 주문 생성이 실패할 때 사용됩니다. 아래는 전략 또는 설정 파일에서 변경되지 않은 경우 사용되는 기본 값입니다.</p><p>전략 파일의 예:</p><div class="highlight"><pre><code><span class="n">order_types</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s2">&quot;entry&quot;</span><span class="p">:</span> <span class="s2">&quot;limit&quot;</span><span class="p">,</span>
    <span class="s2">&quot;exit&quot;</span><span class="p">:</span> <span class="s2">&quot;limit&quot;</span><span class="p">,</span>
    <span class="s2">&quot;emergency_exit&quot;</span><span class="p">:</span> <span class="s2">&quot;market&quot;</span><span class="p">,</span>
    <span class="s2">&quot;stoploss&quot;</span><span class="p">:</span> <span class="s2">&quot;market&quot;</span><span class="p">,</span>
    <span class="s2">&quot;stoploss_on_exchange&quot;</span><span class="p">:</span> <span class="kc">True</span><span class="p">,</span>
    <span class="s2">&quot;stoploss_on_exchange_interval&quot;</span><span class="p">:</span> <span class="mi">60</span><span class="p">,</span>
    <span class="s2">&quot;stoploss_on_exchange_limit_ratio&quot;</span><span class="p">:</span> <span class="mf">0.99</span>
<span class="p">}</span>
</code></pre></div><h2 id="stop-loss-types"> 스탑로스 유형 <a class="headerlink" href="#stop-loss-types" title="영구 링크"> ¶ </a></h2><p>현재 봇은 다음과 같은 스탑로스 지원 모드를 포함하고 있습니다:</p>`,33)),a("ol",null,[s[1]||(s[1]=a("li",null,"정적 스탑로스.",-1)),s[2]||(s[2]=a("li",null,"트레일링 스탑로스.",-1)),s[3]||(s[3]=a("li",null,"트레일링 스탑로스, 사용자 정의 긍정적 손실.",-1)),s[4]||(s[4]=a("li",null,"거래가 특정 오프셋에 도달한 후에만 트레일링 스탑로스.",-1)),a("li",null,[t(n,{to:"strategy-callbacks"},{default:l(()=>s[0]||(s[0]=[p("사용자 정의 스탑로스 함수")])),_:1})])]),s[10]||(s[10]=o(`<h3 id="static-stop-loss"> 정적 스탑로스 <a class="headerlink" href="#static-stop-loss" title="영구 링크"> ¶ </a></h3><p>이것은 매우 간단합니다. x의 스탑로스를 정의합니다(가격의 비율로, 즉 x * 가격의 100%). 이는 손실이 정의된 손실을 초과하면 자산을 매도하려고 합니다.</p><p>스탑로스 예시:</p><div class="highlight"><pre><code>    <span class="n">stoploss</span> <span class="o">=</span> <span class="o">-</span><span class="mf">0.10</span>
</code></pre></div><p>예를 들어, 단순화된 수학:</p><ul><li>봇이 자산을 100$에 매수합니다.</li><li>스탑로스가 -10%로 정의됩니다.</li><li>자산이 90$ 아래로 떨어지면 스탑로스가 트리거됩니다.</li></ul><h3 id="trailing-stop-loss"> 트레일링 스탑로스 <a class="headerlink" href="#trailing-stop-loss" title="영구 링크"> ¶ </a></h3><p>이의 초기 값은 <code>stoploss</code>이며, 정적 스탑로스를 정의하는 것과 동일합니다. 트레일링 스탑로스를 활성화하려면:</p><div class="highlight"><pre><code>    <span class="n">stoploss</span> <span class="o">=</span> <span class="o">-</span><span class="mf">0.10</span>
    <span class="n">trailing_stop</span> <span class="o">=</span> <span class="kc">True</span>
</code></pre></div><p>이제 자산 가격이 상승할 때마다 스탑로스를 자동으로 상향 조정하는 알고리즘이 활성화됩니다.</p><p>예를 들어, 단순화된 수학:</p><ul><li>봇이 자산을 100$에 매수합니다.</li><li>스탑로스가 -10%로 정의됩니다.</li><li>자산이 90$ 아래로 떨어지면 스탑로스가 트리거됩니다.</li><li>자산이 102$로 상승한다고 가정합니다.</li><li>스탑로스는 이제 102$의 -10% = 91.8$가 됩니다.</li><li>자산이 101$로 하락하면 스탑로스는 여전히 91.8$이며, 91.8$에서 트리거됩니다.</li></ul><p>요약: 스탑로스는 관찰된 최고 가격의 -10%로 항상 조정됩니다.</p><h3 id="trailing-stop-loss-different-positive-loss"> 트레일링 스탑로스, 다른 긍정적 손실 <a class="headerlink" href="#trailing-stop-loss-different-positive-loss" title="영구 링크"> ¶ </a></h3><p>기본 스탑로스가 손실 상태(매수 - 수수료)일 때, 수익이 발생하면(예: 0.1%) 시스템이 새로운 스탑로스를 사용합니다. 예를 들어, 기본 스탑로스가 -10%이지만, 수익이 발생하면(예: 0.1%) 다른 트레일링 스탑로스를 사용합니다.</p><div class="admonition note"><p class="admonition-title">참고</p><p> 손익분기점에 도달하거나 수익이 발생할 때만 스탑로스를 변경하려면(대부분의 사용자가 원하는 것) 오프셋이 활성화된 다음 섹션을 참조하세요. <a href="#trailing-stop-loss-only-once-the-trade-has-reached-a-certain-offset">오프셋이 활성화된 경우</a></p></div><p>두 값 모두 <code>trailing_stop</code>을 true로 설정하고 <code>trailing_stop_positive</code> 값을 설정해야 합니다.</p><div class="highlight"><pre><code>    <span class="n">stoploss</span> <span class="o">=</span> <span class="o">-</span><span class="mf">0.10</span>
    <span class="n">trailing_stop</span> <span class="o">=</span> <span class="kc">True</span>
    <span class="n">trailing_stop_positive</span> <span class="o">=</span> <span class="mf">0.02</span>
    <span class="n">trailing_stop_positive_offset</span> <span class="o">=</span> <span class="mf">0.0</span>
    <span class="n">trailing_only_offset_is_reached</span> <span class="o">=</span> <span class="kc">False</span>  <span class="c1"># 기본값 - 이 예에서는 필요하지 않음</span>
</code></pre></div><p>예를 들어, 단순화된 수학:</p><ul><li>봇이 자산을 100$에 매수합니다.</li><li>스탑로스가 -10%로 정의됩니다.</li><li>자산이 90$ 아래로 떨어지면 스탑로스가 트리거됩니다.</li><li>자산이 102$로 상승한다고 가정합니다.</li><li>스탑로스는 이제 102$의 -2% = 99.96$가 됩니다(99.96$ 스탑로스는 자산 가격 상승에 따라 -2%로 고정됩니다).</li><li>자산이 101$로 하락하면 스탑로스는 여전히 99.96$이며, 99.96$에서 트리거됩니다.</li></ul><p>0.02는 -2% 스탑로스로 변환됩니다. 이 전에 <code>stoploss</code>가 트레일링 스탑로스로 사용됩니다.</p><div class="admonition tip"><p class="admonition-title">오프셋을 사용하여 스탑로스를 변경하세요</p><p><code>trailing_stop_positive_offset</code>을 사용하여 <code>trailing_stop_positive</code>보다 높은 값을 설정하여 새로운 트레일링 스탑로스가 수익을 잠그도록 하세요. 첫 번째 새로운 스탑로스 값은 이미 수익을 잠그게 됩니다.</p><p>단순화된 수학 예시:</p><div class="highlight"><pre><code>    <span class="n">stoploss</span> <span class="o">=</span> <span class="o">-</span><span class="mf">0.10</span>
    <span class="n">trailing_stop</span> <span class="o">=</span> <span class="kc">True</span>
    <span class="n">trailing_stop_positive</span> <span class="o">=</span> <span class="mf">0.02</span>
    <span class="n">trailing_stop_positive_offset</span> <span class="o">=</span> <span class="mf">0.03</span>
</code></pre></div><ul><li>봇이 자산을 100$에 매수합니다.</li><li>스탑로스가 -10%로 정의됩니다. 따라서 자산이 90$ 아래로 떨어지면 스탑로스가 트리거됩니다.</li><li>자산이 102$로 상승한다고 가정합니다.</li><li>스탑로스는 이제 관찰된 최고 가격의 -10%인 91.8$에 있습니다.</li><li>자산이 103.5$로 상승한다고 가정합니다(설정된 오프셋 이상).</li><li>스탑로스는 이제 103.5$의 -2% = 101.43$가 됩니다.</li><li>자산이 102$로 하락하면 스탑로스는 여전히 101.43$이며, 가격이 101.43$ 아래로 떨어지면 트리거됩니다.</li></ul></div><h3 id="trailing-stop-loss-only-once-the-trade-has-reached-a-certain-offset"> 거래가 특정 오프셋에 도달한 후에만 트레일링 스탑로스 <a class="headerlink" href="#trailing-stop-loss-only-once-the-trade-has-reached-a-certain-offset" title="영구 링크"> ¶ </a></h3><p>오프셋에 도달할 때까지 정적 스탑로스를 유지하고, 시장이 반전되면 수익을 취하기 위해 거래를 추적할 수 있습니다.</p><p><code>trailing_only_offset_is_reached = True</code>인 경우, 오프셋에 도달한 후에만 트레일링 스탑로스가 활성화됩니다. 그때까지 스탑로스는 설정된 <code>stoploss</code>에 머물며 추적되지 않습니다. 이 값을 <code>trailing_only_offset_is_reached=False</code>로 설정하면 자산 가격이 초기 진입 가격을 초과할 때마다 트레일링 스탑로스가 시작됩니다.</p><p>이 옵션은 <code>trailing_stop_positive</code> 없이도 사용할 수 있지만, 오프셋으로 <code>trailing_stop_positive_offset</code>을 사용합니다.</p><p>구성(오프셋은 매수 가격 + 3%):</p><div class="highlight"><pre><code>    <span class="n">stoploss</span> <span class="o">=</span> <span class="o">-</span><span class="mf">0.10</span>
    <span class="n">trailing_stop</span> <span class="o">=</span> <span class="kc">True</span>
    <span class="n">trailing_stop_positive</span> <span class="o">=</span> <span class="mf">0.02</span>
    <span class="n">trailing_stop_positive_offset</span> <span class="o">=</span> <span class="mf">0.03</span>
    <span class="n">trailing_only_offset_is_reached</span> <span class="o">=</span> <span class="kc">True</span>
</code></pre></div><p>예를 들어, 단순화된 수학:</p><ul><li>봇이 자산을 100$에 매수합니다.</li><li>스탑로스가 -10%로 정의됩니다.</li><li>자산이 90$ 아래로 떨어지면 스탑로스가 트리거됩니다.</li><li>자산이 설정된 오프셋에 도달하거나 초과할 때까지 스탑로스는 90$에 머물러 있습니다.</li><li>자산이 103$로 상승한다고 가정합니다(설정된 오프셋).</li><li>스탑로스는 이제 103$의 -2% = 100.94$가 됩니다.</li><li>자산이 101$로 하락하면 스탑로스는 여전히 100.94$이며, 100.94$에서 트리거됩니다.</li></ul><div class="admonition tip"><p class="admonition-title">팁</p><p>이 값(<code>trailing_stop_positive_offset</code>)을 최소 ROI보다 낮게 설정하세요. 그렇지 않으면 최소 ROI가 먼저 적용되어 거래를 매도합니다.</p></div><h2 id="stoploss-and-leverage"> 스탑로스와 레버리지 <a class="headerlink" href="#stoploss-and-leverage" title="영구 링크"> ¶ </a></h2><p>스탑로스는 &quot;이 거래에서의 위험&quot;으로 생각해야 합니다. 따라서 100$ 거래에서 10%의 스탑로스는 이 거래에서 10$(10%)를 잃을 의향이 있음을 의미하며, 가격이 10% 하락하면 트리거됩니다.</p><p>레버리지를 사용할 때도 동일한 원칙이 적용되며, 스탑로스는 거래의 위험(잃을 의향이 있는 금액)을 정의합니다.</p><p>따라서 10x 거래에서 10%의 스탑로스는 1% 가격 이동에서 트리거됩니다. 스테이크 금액(자신의 자본)이 100$인 경우, 이 거래는 10x에서 1000$입니다(레버리지 후). 가격이 1% 이동하면 자신의 자본 10$을 잃게 되므로 이 경우 스탑로스가 트리거됩니다.</p><p>이를 인지하고 너무 빡빡한 스탑로스를 사용하지 않도록 하세요(10x 레버리지에서 10% 위험은 거래가 약간의 &quot;숨 쉴 공간&quot;을 허용하기에 너무 적을 수 있습니다).</p><h2 id="changing-stoploss-on-open-trades"> 열린 거래에서 스탑로스 변경 <a class="headerlink" href="#changing-stoploss-on-open-trades" title="영구 링크"> ¶ </a></h2><p>열린 거래에서 스탑로스를 변경하려면 설정 또는 전략에서 값을 변경하고 <code>/reload_config</code> 명령을 사용하세요(대안으로 봇을 완전히 중지하고 다시 시작하는 것도 가능합니다).</p><p>새 스탑로스 값이 열린 거래에 적용되며, 해당 로그 메시지가 생성됩니다.</p><h3 id="limitations"> 제한 사항 <a class="headerlink" href="#limitations" title="영구 링크"> ¶ </a></h3>`,40)),a("p",null,[s[6]||(s[6]=a("code",null,"trailing_stop",-1)),s[7]||(s[7]=p("이 활성화되고 스탑로스가 이미 조정된 경우 또는 ")),t(n,{to:"edge"},{default:l(()=>s[5]||(s[5]=[p("Edge")])),_:1}),s[8]||(s[8]=p("가 활성화된 경우(Edge가 현재 시장 상황에 따라 스탑로스를 재계산하기 때문에) 스탑로스 값을 변경할 수 없습니다."))])])}}};export{g as default};
