import{o as t,c as a,a as i}from"./index-747ab7f0.js";const s={class:"md-content__inner md-typeset"},n={__name:"AdvancedBacktesting",setup(o){return(d,e)=>(t(),a("article",s,e[0]||(e[0]=[i(`<h1 id="advanced-backtesting-analysis"> 고급 백테스트 분석 <a class="headerlink" href="#advanced-backtesting-analysis" title="영구 링크"> ¶ </a></h1><h2 id="analyze-the-buyentry-and-sellexit-tags"> 매수/진입 및 매도/종료 태그 분석 <a class="headerlink" href="#analyze-the-buyentry-and-sellexit-tags" title="영구 링크"> ¶ </a></h2><p>전략이 다양한 매수 조건에 따라 어떻게 작동하는지 이해하는 데 도움이 될 수 있습니다. 기본 백테스트 출력에서 제공하는 것 이상의 복잡한 통계를 확인하거나, 거래를 열게 한 신호 캔들에서 지표 값을 확인하고 싶을 수 있습니다.</p><div class="admonition note"><p class="admonition-title">참고</p><p> 다음 매수 이유 분석은 백테스트에서만 사용할 수 있으며, <em> 하이퍼옵트에서는 사용할 수 없습니다 </em>. </p></div><p> 신호와 거래를 내보내기 위해 <code> --export </code> 옵션을 <code> signals </code> 로 설정하여 백테스트를 실행해야 합니다: </p><div class="highlight"><pre><code>freqtrade backtesting -c &lt;config.json&gt; --timeframe &lt;tf&gt; --strategy &lt;strategy_name&gt; --timerange=&lt;timerange&gt; --export=signals</code></pre></div><p>이 명령은 전략, 페어 및 진입/종료 신호를 생성한 캔들에 해당하는 DataFrame의 피클 파일을 출력합니다. 전략이 생성하는 진입 횟수에 따라 이 파일은 매우 커질 수 있으므로, <code>user_data/backtest_results</code> 폴더를 주기적으로 확인하여 오래된 내보내기를 삭제하세요.</p><p> 다음 백테스트를 실행하기 전에 이전 백테스트 결과를 삭제하거나 <code> --cache none </code> 옵션을 사용하여 캐시된 결과가 사용되지 않도록 하세요. </p><p> 정상적으로 실행되었다면, 이제 <code> backtest-result-{timestamp}_signals.pkl </code> 및 <code> backtest-result-{timestamp}_exited.pkl </code> 파일이 <code> user_data/backtest_results </code> 폴더에 생성된 것을 확인할 수 있습니다. </p><p> 진입/종료 태그를 분석하려면 <code> freqtrade backtesting-analysis </code> 명령을 사용하고, 공백으로 구분된 인수를 포함한 <code> --analysis-groups </code> 옵션을 제공해야 합니다: </p><div class="highlight"><pre><code>freqtrade backtesting-analysis -c &lt;config.json&gt; --analysis-groups 0 1 2 3 4 5</code></pre></div><p> 이 명령은 마지막 백테스트 결과를 읽습니다. <code> --analysis-groups </code> 옵션은 각 그룹 또는 거래의 수익을 보여주는 다양한 표 형식의 출력을 지정하는 데 사용됩니다: </p><ul><li>0: enter_tag별 전체 승률 및 수익 요약</li><li>1: enter_tag별 수익 요약</li><li>2: enter_tag 및 exit_tag별 수익 요약</li><li>3: 페어 및 enter_tag별 수익 요약</li><li>4: 페어, enter_tag 및 exit_tag별 수익 요약(매우 클 수 있음)</li><li>5: exit_tag별 수익 요약</li></ul><p> 추가 옵션은 <code> -h </code> 옵션을 사용하여 확인할 수 있습니다. </p><h3 id="using-export-filename"> 내보내기 파일 이름 사용 <a class="headerlink" href="#using-export-filename" title="영구 링크"> ¶ </a></h3><p> 일반적으로 <code> backtesting-analysis </code> 는 최신 백테스트 결과를 사용하지만, 이전 백테스트 출력을 사용하려면 <code> --export-filename </code> 옵션을 제공해야 합니다. 최종 백테스트 출력 파일의 이름을 <code> backtest-analysis </code> 에 제공할 수 있습니다. 이를 통해 백테스트 결과의 역사적 버전을 유지하고 나중에 다시 분석할 수 있습니다: </p><div class="highlight"><pre><code>freqtrade backtesting -c &lt;config.json&gt; --timeframe &lt;tf&gt; --strategy &lt;strategy_name&gt; --timerange=&lt;timerange&gt; --export=signals --export-filename=/tmp/mystrat_backtest.json</code></pre></div><p>로그에서 내보낸 타임스탬프 파일 이름과 유사한 출력을 확인할 수 있습니다:</p><div class="highlight"><pre><code>2022-06-14 16:28:32,698 - freqtrade.misc - INFO - dumping json to &quot;/tmp/mystrat_backtest-2022-06-14_16-28-32.json&quot;</code></pre></div><p> 그런 다음 해당 파일 이름을 <code> backtesting-analysis </code> 에 사용할 수 있습니다: </p><div class="highlight"><pre><code>freqtrade backtesting-analysis -c &lt;config.json&gt; --export-filename=/tmp/mystrat_backtest-2022-06-14_16-28-32.json</code></pre></div><h3 id="tuning-the-buy-tags-and-sell-tags-to-display"> 표시할 매수 태그 및 매도 태그 조정 <a class="headerlink" href="#tuning-the-buy-tags-and-sell-tags-to-display" title="영구 링크"> ¶ </a></h3><p>표시된 출력에서 특정 매수 및 매도 태그만 표시하려면 다음 두 옵션을 사용하세요:</p><div class="highlight"><pre><code>--enter-reason-list : 분석할 진입 신호의 공백으로 구분된 목록. 기본값: &quot;all&quot;
--exit-reason-list : 분석할 종료 신호의 공백으로 구분된 목록. 기본값: &quot;all&quot;</code></pre></div><p>예를 들어:</p><div class="highlight"><pre><code>freqtrade backtesting-analysis -c &lt;config.json&gt; --analysis-groups 0 2 --enter-reason-list enter_tag_a enter_tag_b --exit-reason-list roi custom_exit_tag_a stop_loss</code></pre></div><h3 id="outputting-signal-candle-indicators"> 신호 캔들 지표 출력 <a class="headerlink" href="#outputting-signal-candle-indicators" title="영구 링크"> ¶ </a></h3><p><code> freqtrade backtesting-analysis </code> 의 진정한 강점은 신호 캔들에서 지표 값을 출력하여 매수 신호 지표의 세밀한 조사 및 조정을 가능하게 하는 데 있습니다. 특정 지표 세트에 대한 열을 출력하려면 <code> --indicator-list </code> 옵션을 사용하세요: </p><div class="highlight"><pre><code>freqtrade backtesting-analysis -c &lt;config.json&gt; --analysis-groups 0 2 --enter-reason-list enter_tag_a enter_tag_b --exit-reason-list roi custom_exit_tag_a stop_loss --indicator-list rsi rsi_1h bb_lowerband ema_9 macd macdsignal</code></pre></div><p>지표는 전략의 주요 DataFrame(주 시간 프레임 또는 정보 시간 프레임)에 있어야 하며, 그렇지 않으면 스크립트 출력에서 무시됩니다.</p><div class="admonition note"><p class="admonition-title">지표 목록</p><p> 지표 값은 진입 및 종료 지점 모두에 대해 표시됩니다. <code> --indicator-list all </code> 이 지정된 경우, 전략에 따라 과도하게 큰 목록이 될 수 있으므로 진입 지점의 지표만 표시됩니다. </p></div><p>분석에 포함된 다양한 캔들 및 거래 관련 필드가 있으며, 이를 지표 목록에 포함하여 자동으로 액세스할 수 있습니다. 이러한 필드는 다음과 같습니다:</p><ul><li><strong> open_date : </strong> 거래 시작 날짜 및 시간 </li><li><strong> close_date : </strong> 거래 종료 날짜 및 시간 </li><li><strong> min_rate : </strong> 포지션 동안 본 최소 가격 </li><li><strong> max_rate : </strong> 포지션 동안 본 최대 가격 </li><li><strong> open : </strong> 신호 캔들 시작 가격 </li><li><strong> close : </strong> 신호 캔들 종료 가격 </li><li><strong> high : </strong> 신호 캔들 최고 가격 </li><li><strong> low : </strong> 신호 캔들 최저 가격 </li><li><strong> volume : </strong> 신호 캔들 거래량 </li><li><strong> profit_ratio : </strong> 거래 수익 비율 </li><li><strong> profit_abs : </strong> 거래의 절대 수익 </li></ul><h4 id="sample-output-for-indicator-values"> 지표 값에 대한 샘플 출력 <a class="headerlink" href="#sample-output-for-indicator-values" title="영구 링크"> ¶ </a></h4><div class="highlight"><pre><code>freqtrade backtesting-analysis -c user_data/config.json --analysis-groups 0 --indicator-list chikou_span tenkan_sen</code></pre></div><p> 이 예제에서는 거래의 진입 및 종료 지점에서 <code> chikou_span </code> 및 <code> tenkan_sen </code> 지표 값을 표시하려고 합니다. </p><p>지표에 대한 샘플 출력은 다음과 같습니다:</p><table><thead><tr><th>pair</th><th>open_date</th><th>enter_reason</th><th>exit_reason</th><th>chikou_span (entry)</th><th>tenkan_sen (entry)</th><th>chikou_span (exit)</th><th>tenkan_sen (exit)</th></tr></thead><tbody><tr><td>DOGE/USDT</td><td>2024-07-06 00:35:00+00:00</td><td></td><td>exit_signal</td><td>0.105</td><td>0.106</td><td>0.105</td><td>0.107</td></tr><tr><td>BTC/USDT</td><td>2024-08-05 14:20:00+00:00</td><td></td><td>roi</td><td>54643.440</td><td>51696.400</td><td>54386.000</td><td>52072.010</td></tr></tbody></table><p> 표에 표시된 것처럼, <code> chikou_span (entry) </code> 는 거래 진입 시점의 지표 값을 나타내며, <code> chikou_span (exit) </code> 는 종료 시점의 값을 반영합니다. 지표 값의 이 상세한 뷰는 분석을 향상시킵니다. </p><p> 지표 이름에 <code> (entry) </code> 및 <code> (exit) </code> 접미사가 추가되어 거래의 진입 및 종료 지점에서 값을 구분합니다. </p><div class="admonition note"><p class="admonition-title">거래 전반의 지표</p><p> 일부 거래 전반의 지표에는 <code> (entry) </code> 또는 <code> (exit) </code> 접미사가 없습니다. 이러한 지표에는 <code> pair </code> , <code> stake_amount </code> , <code> max_stake_amount </code> , <code> amount </code> , <code> open_date </code> , <code> close_date </code> , <code> open_rate </code> , <code> close_rate </code> , <code> fee_open </code> , <code> fee_close </code> , <code> trade_duration </code> , <code> profit_ratio </code> , <code> profit_abs </code> , <code> exit_reason </code> , <code> initial_stop_loss_abs </code> , <code> initial_stop_loss_ratio </code> , <code> stop_loss_abs </code> , <code> stop_loss_ratio </code> , <code> min_rate </code> , <code> max_rate </code> , <code> is_open </code> , <code> enter_tag </code> , <code> leverage </code> , <code> is_short </code> , <code> open_timestamp </code> , <code> close_timestamp </code> 및 <code> orders </code> 가 포함됩니다. </p></div><h4 id="filtering-indicators-based-on-entry-or-exit-signals"> 진입 또는 종료 신호를 기준으로 지표 필터링 <a class="headerlink" href="#filtering-indicators-based-on-entry-or-exit-signals" title="영구 링크"> ¶ </a></h4><p><code> --indicator-list </code> 옵션은 기본적으로 진입 및 종료 신호에 대한 지표 값을 표시합니다. 진입 신호에 대한 지표 값만 필터링하려면 <code> --entry-only </code> 인수를 사용할 수 있습니다. 마찬가지로, 종료 신호에서만 지표 값을 표시하려면 <code> --exit-only </code> 인수를 사용하세요. </p><p>예: 진입 신호에서 지표 값 표시:</p><div class="highlight"><pre><code>freqtrade backtesting-analysis -c user_data/config.json --analysis-groups 0 --indicator-list chikou_span tenkan_sen --entry-only</code></pre></div><p>예: 종료 신호에서 지표 값 표시:</p><div class="highlight"><pre><code>freqtrade backtesting-analysis -c user_data/config.json --analysis-groups 0 --indicator-list chikou_span tenkan_sen --exit-only</code></pre></div><div class="admonition note"><p class="admonition-title">참고</p><p> 이러한 필터를 사용할 때 지표 이름에는 <code> (entry) </code> 또는 <code> (exit) </code> 접미사가 붙지 않습니다. </p></div><h3 id="filtering-the-trade-output-by-date"> 날짜별 거래 출력 필터링 <a class="headerlink" href="#filtering-the-trade-output-by-date" title="영구 링크"> ¶ </a></h3><p> 백테스트된 시간 범위 내에서 날짜별로 거래만 표시하려면 일반적인 <code> timerange </code> 옵션을 <code> YYYYMMDD-[YYYYMMDD] </code> 형식으로 제공하세요: </p><div class="highlight"><pre><code>--timerange : 출력 거래를 필터링할 시간 범위, 시작 날짜 포함, 종료 날짜 제외. 예: 20220101-20221231</code></pre></div><p> 예를 들어, 백테스트 시간 범위가 <code> 20220101-20221231 </code> 이지만 1월의 거래만 출력하려는 경우: </p><div class="highlight"><pre><code>freqtrade backtesting-analysis -c &lt;config.json&gt; --timerange 20220101-20220201</code></pre></div><h3 id="printing-out-rejected-signals"> 거부된 신호 출력 <a class="headerlink" href="#printing-out-rejected-signals" title="영구 링크"> ¶ </a></h3><p> 거부된 신호를 출력하려면 <code> --rejected-signals </code> 옵션을 사용하세요. </p><div class="highlight"><pre><code>freqtrade backtesting-analysis -c &lt;config.json&gt; --rejected-signals</code></pre></div><h3 id="writing-tables-to-csv"> 테이블을 CSV로 작성 <a class="headerlink" href="#writing-tables-to-csv" title="영구 링크"> ¶ </a></h3><p> 일부 표 형식의 출력은 매우 커질 수 있으므로 터미널에 출력하는 것은 바람직하지 않습니다. <code> --analysis-to-csv </code> 옵션을 사용하여 표를 표준 출력으로 출력하지 않고 CSV 파일로 작성하세요. </p><div class="highlight"><pre><code>freqtrade backtesting-analysis -c &lt;config.json&gt; --analysis-to-csv</code></pre></div><p> 기본적으로 이는 <code> backtesting-analysis </code> 명령에서 지정한 출력 테이블당 하나의 파일을 작성합니다. 예: </p><div class="highlight"><pre><code>freqtrade backtesting-analysis -c &lt;config.json&gt; --analysis-to-csv --rejected-signals --analysis-groups 0 1</code></pre></div><p> 이는 <code> user_data/backtest_results </code> 에 작성됩니다: </p><ul><li>rejected_signals.csv</li><li>group_0.csv</li><li>group_1.csv</li></ul><p> 파일이 작성될 위치를 재정의하려면 <code> --analysis-csv-path </code> 옵션을 지정하세요. </p><div class="highlight"><pre><code>freqtrade backtesting-analysis -c &lt;config.json&gt; --analysis-to-csv --analysis-csv-path another/data/path/</code></pre></div>`,65)])))}};export{n as default};
