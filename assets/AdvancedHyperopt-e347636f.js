import{o as a,c as n,a as p}from"./index-ff969378.js";const c={class:"md-content__inner md-typeset"},t={__name:"AdvancedHyperopt",setup(l){return(e,s)=>(a(),n("article",c,s[0]||(s[0]=[p(`<h1 id="advanced-hyperopt"> 고급 하이퍼옵트 <a class="headerlink" href="#advanced-hyperopt" title="영구 링크"> ¶ </a></h1><p>이 페이지는 고급 하이퍼옵트 주제를 설명하며, 일반적인 하이퍼옵트 클래스 생성보다 높은 코딩 기술과 Python 지식이 필요할 수 있습니다.</p><h2 id="creating-and-using-a-custom-loss-function"> 사용자 정의 손실 함수 생성 및 사용 <a class="headerlink" href="#creating-and-using-a-custom-loss-function" title="영구 링크"> ¶ </a></h2><p> 사용자 정의 손실 함수 클래스를 사용하려면, 해당 클래스에서 <code>hyperopt_loss_function</code> 메서드를 정의해야 합니다. 아래 예제에서는 명령줄 매개변수 <code>--hyperopt-loss SuperDuperHyperOptLoss</code> 를 하이퍼옵트 호출에 추가하여 이 함수를 사용하도록 설정합니다. </p><p> 아래는 기본 하이퍼옵트 손실 구현과 동일한 샘플입니다. 전체 샘플은 <a href="https://github.com/freqtrade/freqtrade/blob/develop/freqtrade/templates/sample_hyperopt_loss.py"> userdata/hyperopts </a> 에서 확인할 수 있습니다. </p><div class="highlight"><pre><code><span class="kn">from</span><span class="w"> </span><span class="nn">datetime</span><span class="w"> </span><span class="kn">import</span> <span class="n">datetime</span>
<span class="kn">from</span><span class="w"> </span><span class="nn">typing</span><span class="w"> </span><span class="kn">import</span> <span class="n">Any</span><span class="p">,</span> <span class="n">Dict</span>

<span class="kn">from</span><span class="w"> </span><span class="nn">pandas</span><span class="w"> </span><span class="kn">import</span> <span class="n">DataFrame</span>

<span class="kn">from</span><span class="w"> </span><span class="nn">freqtrade.constants</span><span class="w"> </span><span class="kn">import</span> <span class="n">Config</span>
<span class="kn">from</span><span class="w"> </span><span class="nn">freqtrade.optimize.hyperopt</span><span class="w"> </span><span class="kn">import</span> <span class="n">IHyperOptLoss</span>

<span class="n">TARGET_TRADES</span> <span class="o">=</span> <span class="mi">600</span>
<span class="n">EXPECTED_MAX_PROFIT</span> <span class="o">=</span> <span class="mf">3.0</span>
<span class="n">MAX_ACCEPTED_TRADE_DURATION</span> <span class="o">=</span> <span class="mi">300</span>

<span class="k">class</span><span class="w"> </span><span class="nc">SuperDuperHyperOptLoss</span><span class="p">(</span><span class="n">IHyperOptLoss</span><span class="p">):</span>
<span class="w">    </span><span class="sd">&quot;&quot;&quot;</span>
<span class="sd">    하이퍼옵트 기본 손실 함수를 정의합니다.</span>
<span class="sd">    &quot;&quot;&quot;</span>

    <span class="nd">@staticmethod</span>
    <span class="k">def</span><span class="w"> </span><span class="nf">hyperopt_loss_function</span><span class="p">(</span>
        <span class="o">*</span><span class="p">,</span>
        <span class="n">results</span><span class="p">:</span> <span class="n">DataFrame</span><span class="p">,</span>
        <span class="n">trade_count</span><span class="p">:</span> <span class="nb">int</span><span class="p">,</span>
        <span class="n">min_date</span><span class="p">:</span> <span class="n">datetime</span><span class="p">,</span>
        <span class="n">max_date</span><span class="p">:</span> <span class="n">datetime</span><span class="p">,</span>
        <span class="n">config</span><span class="p">:</span> <span class="n">Config</span><span class="p">,</span>
        <span class="n">processed</span><span class="p">:</span> <span class="nb">dict</span><span class="p">[</span><span class="nb">str</span><span class="p">,</span> <span class="n">DataFrame</span><span class="p">],</span>
        <span class="n">backtest_stats</span><span class="p">:</span> <span class="nb">dict</span><span class="p">[</span><span class="nb">str</span><span class="p">,</span> <span class="n">Any</span><span class="p">],</span>
        <span class="n">starting_balance</span><span class="p">:</span> <span class="nb">float</span><span class="p">,</span>
        <span class="o">**</span><span class="n">kwargs</span><span class="p">,</span>
    <span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">float</span><span class="p">:</span>
<span class="w">        </span><span class="sd">&quot;&quot;&quot;</span>
<span class="sd">        목표 함수로, 더 작은 숫자가 더 나은 결과를 나타냅니다.</span>
<span class="sd">        &quot;&quot;&quot;</span>
        <span class="n">total_profit</span> <span class="o">=</span> <span class="n">results</span><span class="p">[</span><span class="s1">&#39;profit_ratio&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span>
        <span class="n">trade_duration</span> <span class="o">=</span> <span class="n">results</span><span class="p">[</span><span class="s1">&#39;trade_duration&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>

        <span class="n">trade_loss</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">-</span> <span class="mf">0.25</span> <span class="o">*</span> <span class="n">exp</span><span class="p">(</span><span class="o">-</span><span class="p">(</span><span class="n">trade_count</span> <span class="o">-</span> <span class="n">TARGET_TRADES</span><span class="p">)</span> <span class="o">**</span> <span class="mi">2</span> <span class="o">/</span> <span class="mi">10</span> <span class="o">**</span> <span class="mf">5.8</span><span class="p">)</span>
        <span class="n">profit_loss</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span> <span class="o">-</span> <span class="n">total_profit</span> <span class="o">/</span> <span class="n">EXPECTED_MAX_PROFIT</span><span class="p">)</span>
        <span class="n">duration_loss</span> <span class="o">=</span> <span class="mf">0.4</span> <span class="o">*</span> <span class="nb">min</span><span class="p">(</span><span class="n">trade_duration</span> <span class="o">/</span> <span class="n">MAX_ACCEPTED_TRADE_DURATION</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
        <span class="n">result</span> <span class="o">=</span> <span class="n">trade_loss</span> <span class="o">+</span> <span class="n">profit_loss</span> <span class="o">+</span> <span class="n">duration_loss</span>
        <span class="k">return</span> <span class="n">result</span>
</code></pre></div><p>현재 인수는 다음과 같습니다:</p><ul><li><code>results</code> : 거래 결과를 포함하는 DataFrame. 결과에는 다음 열이 포함됩니다: <br><code>pair, profit_ratio, profit_abs, open_date, open_rate, fee_open, close_date, close_rate, fee_close, amount, trade_duration, is_open, exit_reason, stake_amount, min_rate, max_rate, stop_loss_ratio, stop_loss_abs</code></li><li><code>trade_count</code> : 거래 횟수 ( <code>len(results)</code> 와 동일) </li><li><code>min_date</code> : 사용된 기간의 시작 날짜 </li><li><code>max_date</code> : 사용된 기간의 종료 날짜 </li><li><code>config</code> : 사용된 설정 객체 </li><li><code>processed</code> : 백테스트에 사용된 데이터가 포함된 DataFrame의 딕셔너리 </li><li><code>backtest_stats</code> : 백테스트 통계 </li><li><code>starting_balance</code> : 백테스트에 사용된 초기 잔액 </li></ul><p>이 함수는 부동 소수점 숫자 (<code>float</code>)를 반환해야 합니다. 작은 숫자가 더 나은 결과로 해석됩니다.</p><div class="admonition note"><p class="admonition-title">참고</p><p>이 함수는 에포크당 한 번 호출되므로, 하이퍼옵트 속도를 불필요하게 느리게 하지 않도록 최적화하세요.</p></div><div class="admonition note"><p class="admonition-title"><code>*args</code> 와 <code>**kwargs</code></p><p> 인터페이스를 확장할 수 있도록 <code>*args</code> 와 <code>**kwargs</code> 인수를 유지하세요. </p></div><h2 id="overriding-pre-defined-spaces"> 미리 정의된 공간 재정의 <a class="headerlink" href="#overriding-pre-defined-spaces" title="영구 링크"> ¶ </a></h2><p> 미리 정의된 공간 ( <code>roi_space</code> , <code>generate_roi_table</code> , <code>stoploss_space</code> , <code>trailing_space</code> , <code>max_open_trades_space</code> )을 재정의하려면, Hyperopt라는 중첩 클래스를 정의하고 다음과 같이 필요한 공간을 정의하세요: </p><div class="highlight"><pre><code><span class="kn">from</span><span class="w"> </span><span class="nn">freqtrade.optimize.space</span><span class="w"> </span><span class="kn">import</span> <span class="n">Categorical</span><span class="p">,</span> <span class="n">Dimension</span><span class="p">,</span> <span class="n">Integer</span><span class="p">,</span> <span class="n">SKDecimal</span>

<span class="k">class</span><span class="w"> </span><span class="nc">MyAwesomeStrategy</span><span class="p">(</span><span class="n">IStrategy</span><span class="p">):</span>
    <span class="k">class</span><span class="w"> </span><span class="nc">HyperOpt</span><span class="p">:</span>
        <span class="c1"># Define a custom stoploss space.</span>
        <span class="k">def</span><span class="w"> </span><span class="nf">stoploss_space</span><span class="p">():</span>
            <span class="k">return</span> <span class="p">[</span><span class="n">SKDecimal</span><span class="p">(</span><span class="o">-</span><span class="mf">0.05</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.01</span><span class="p">,</span> <span class="n">decimals</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s1">&#39;stoploss&#39;</span><span class="p">)]</span>

        <span class="c1"># Define custom ROI space</span>
        <span class="k">def</span><span class="w"> </span><span class="nf">roi_space</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">List</span><span class="p">[</span><span class="n">Dimension</span><span class="p">]:</span>
            <span class="k">return</span> <span class="p">[</span>
                <span class="n">Integer</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">120</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s1">&#39;roi_t1&#39;</span><span class="p">),</span>
                <span class="n">Integer</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">60</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s1">&#39;roi_t2&#39;</span><span class="p">),</span>
                <span class="n">Integer</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">40</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s1">&#39;roi_t3&#39;</span><span class="p">),</span>
                <span class="n">SKDecimal</span><span class="p">(</span><span class="mf">0.01</span><span class="p">,</span> <span class="mf">0.04</span><span class="p">,</span> <span class="n">decimals</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s1">&#39;roi_p1&#39;</span><span class="p">),</span>
                <span class="n">SKDecimal</span><span class="p">(</span><span class="mf">0.01</span><span class="p">,</span> <span class="mf">0.07</span><span class="p">,</span> <span class="n">decimals</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s1">&#39;roi_p2&#39;</span><span class="p">),</span>
                <span class="n">SKDecimal</span><span class="p">(</span><span class="mf">0.01</span><span class="p">,</span> <span class="mf">0.20</span><span class="p">,</span> <span class="n">decimals</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s1">&#39;roi_p3&#39;</span><span class="p">),</span>
            <span class="p">]</span>

        <span class="k">def</span><span class="w"> </span><span class="nf">generate_roi_table</span><span class="p">(</span><span class="n">params</span><span class="p">:</span> <span class="n">Dict</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">dict</span><span class="p">[</span><span class="nb">int</span><span class="p">,</span> <span class="nb">float</span><span class="p">]:</span>

            <span class="n">roi_table</span> <span class="o">=</span> <span class="p">{}</span>
            <span class="n">roi_table</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">params</span><span class="p">[</span><span class="s1">&#39;roi_p1&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="n">params</span><span class="p">[</span><span class="s1">&#39;roi_p2&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="n">params</span><span class="p">[</span><span class="s1">&#39;roi_p3&#39;</span><span class="p">]</span>
            <span class="n">roi_table</span><span class="p">[</span><span class="n">params</span><span class="p">[</span><span class="s1">&#39;roi_t3&#39;</span><span class="p">]]</span> <span class="o">=</span> <span class="n">params</span><span class="p">[</span><span class="s1">&#39;roi_p1&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="n">params</span><span class="p">[</span><span class="s1">&#39;roi_p2&#39;</span><span class="p">]</span>
            <span class="n">roi_table</span><span class="p">[</span><span class="n">params</span><span class="p">[</span><span class="s1">&#39;roi_t3&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="n">params</span><span class="p">[</span><span class="s1">&#39;roi_t2&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">params</span><span class="p">[</span><span class="s1">&#39;roi_p1&#39;</span><span class="p">]</span>
            <span class="n">roi_table</span><span class="p">[</span><span class="n">params</span><span class="p">[</span><span class="s1">&#39;roi_t3&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="n">params</span><span class="p">[</span><span class="s1">&#39;roi_t2&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="n">params</span><span class="p">[</span><span class="s1">&#39;roi_t1&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span>

            <span class="k">return</span> <span class="n">roi_table</span>

        <span class="k">def</span><span class="w"> </span><span class="nf">trailing_space</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">List</span><span class="p">[</span><span class="n">Dimension</span><span class="p">]:</span>
            <span class="c1"># All parameters here are mandatory, you can only modify their type or the range.</span>
            <span class="k">return</span> <span class="p">[</span>
                <span class="c1"># Fixed to true, if optimizing trailing_stop we assume to use trailing stop at all times.</span>
                <span class="n">Categorical</span><span class="p">([</span><span class="kc">True</span><span class="p">],</span> <span class="n">name</span><span class="o">=</span><span class="s1">&#39;trailing_stop&#39;</span><span class="p">),</span>

                <span class="n">SKDecimal</span><span class="p">(</span><span class="mf">0.01</span><span class="p">,</span> <span class="mf">0.35</span><span class="p">,</span> <span class="n">decimals</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s1">&#39;trailing_stop_positive&#39;</span><span class="p">),</span>
                <span class="c1"># &#39;trailing_stop_positive_offset&#39; should be greater than &#39;trailing_stop_positive&#39;,</span>
                <span class="c1"># so this intermediate parameter is used as the value of the difference between</span>
                <span class="c1"># them. The value of the &#39;trailing_stop_positive_offset&#39; is constructed in the</span>
                <span class="c1"># generate_trailing_params() method.</span>
                <span class="c1"># This is similar to the hyperspace dimensions used for constructing the ROI tables.</span>
                <span class="n">SKDecimal</span><span class="p">(</span><span class="mf">0.001</span><span class="p">,</span> <span class="mf">0.1</span><span class="p">,</span> <span class="n">decimals</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s1">&#39;trailing_stop_positive_offset_p1&#39;</span><span class="p">),</span>

                <span class="n">Categorical</span><span class="p">([</span><span class="kc">True</span><span class="p">,</span> <span class="kc">False</span><span class="p">],</span> <span class="n">name</span><span class="o">=</span><span class="s1">&#39;trailing_only_offset_is_reached&#39;</span><span class="p">),</span>
        <span class="p">]</span>

        <span class="c1"># Define a custom max_open_trades space</span>
        <span class="k">def</span><span class="w"> </span><span class="nf">max_open_trades_space</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">List</span><span class="p">[</span><span class="n">Dimension</span><span class="p">]:</span>
            <span class="k">return</span> <span class="p">[</span>
                <span class="n">Integer</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s1">&#39;max_open_trades&#39;</span><span class="p">),</span>
            <span class="p">]</span>
</code></pre></div><div class="admonition note"><p class="admonition-title">참고</p><p>모든 재정의는 선택 사항이며 필요에 따라 혼합/매치할 수 있습니다.</p></div><h3 id="dynamic-parameters"> 동적 매개변수 <a class="headerlink" href="#dynamic-parameters" title="영구 링크"> ¶ </a></h3><p> 매개변수는 동적으로 정의할 수도 있지만, 인스턴스가 <a href="strategy-callbacks.html"><code>bot_start()</code> 콜백 </a> 이 호출된 후에 사용할 수 있어야 합니다. </p><div class="highlight"><pre><code><span class="k">class</span><span class="w"> </span><span class="nc">MyAwesomeStrategy</span><span class="p">(</span><span class="n">IStrategy</span><span class="p">):</span>

    <span class="k">def</span><span class="w"> </span><span class="nf">bot_start</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kc">None</span><span class="p">:</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">buy_adx</span> <span class="o">=</span> <span class="n">IntParameter</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="mi">30</span><span class="p">,</span> <span class="n">optimize</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

    <span class="c1"># ...</span>
</code></pre></div><div class="admonition warning"><p class="admonition-title">경고</p><p> 이 방식으로 생성된 매개변수는 <code>list-strategies</code> 매개변수 수에 표시되지 않습니다. </p></div><h3 id="overriding-base-estimator"> 기본 추정기 재정의 <a class="headerlink" href="#overriding-base-estimator" title="영구 링크"> ¶ </a></h3><p> Hyperopt의 추정기를 재정의하려면 Hyperopt 하위 클래스에서 <code>generate_estimator()</code> 를 구현하세요. </p><div class="highlight"><pre><code><span class="k">class</span><span class="w"> </span><span class="nc">MyAwesomeStrategy</span><span class="p">(</span><span class="n">IStrategy</span><span class="p">):</span>
    <span class="k">class</span><span class="w"> </span><span class="nc">HyperOpt</span><span class="p">:</span>
        <span class="k">def</span><span class="w"> </span><span class="nf">generate_estimator</span><span class="p">(</span><span class="n">dimensions</span><span class="p">:</span> <span class="n">List</span><span class="p">[</span><span class="s1">&#39;Dimension&#39;</span><span class="p">],</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
            <span class="k">return</span> <span class="s2">&quot;RF&quot;</span>
</code></pre></div><p> 가능한 값은 &quot;GP&quot;, &quot;RF&quot;, &quot;ET&quot;, &quot;GBRT&quot; 중 하나입니다 (자세한 내용은 <a href="https://scikit-optimize.github.io/">scikit-optimize 문서</a> 에서 확인할 수 있습니다) 또는 <code>RegressorMixin</code> (sklearn에서 상속받은 클래스의 인스턴스)이며, <code>predict</code> 메서드에 <code>return_std</code> 인수가 있어야 하며, <code>std(Y | x)</code> 와 <code>E[Y | x]</code> 를 반환합니다. </p><p>추가 Regressor를 찾으려면 약간의 연구가 필요합니다.</p><p> 추가 매개변수가 있는 <code>ExtraTreesRegressor</code> (&quot;ET&quot;) 예제: </p><div class="highlight"><pre><code><span class="k">class</span><span class="w"> </span><span class="nc">MyAwesomeStrategy</span><span class="p">(</span><span class="n">IStrategy</span><span class="p">):</span>
    <span class="k">class</span><span class="w"> </span><span class="nc">HyperOpt</span><span class="p">:</span>
        <span class="k">def</span><span class="w"> </span><span class="nf">generate_estimator</span><span class="p">(</span><span class="n">dimensions</span><span class="p">:</span> <span class="n">List</span><span class="p">[</span><span class="s1">&#39;Dimension&#39;</span><span class="p">],</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
            <span class="kn">from</span><span class="w"> </span><span class="nn">skopt.learning</span><span class="w"> </span><span class="kn">import</span> <span class="n">ExtraTreesRegressor</span>
            <span class="c1"># Corresponds to &quot;ET&quot; - but allows additional parameters.</span>
            <span class="k">return</span> <span class="n">ExtraTreesRegressor</span><span class="p">(</span><span class="n">n_estimators</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
</code></pre></div><p><code>dimensions</code> 매개변수는 최적화할 매개변수에 해당하는 <code>skopt.space.Dimension</code> 객체의 목록입니다. 이 매개변수는 <code>skopt.learning.GaussianProcessRegressor</code> 추정기에 대한 등방성 커널을 생성하는 데 사용할 수 있습니다. 다음은 예제입니다: </p><div class="highlight"><pre><code><span class="k">class</span><span class="w"> </span><span class="nc">MyAwesomeStrategy</span><span class="p">(</span><span class="n">IStrategy</span><span class="p">):</span>
    <span class="k">class</span><span class="w"> </span><span class="nc">HyperOpt</span><span class="p">:</span>
        <span class="k">def</span><span class="w"> </span><span class="nf">generate_estimator</span><span class="p">(</span><span class="n">dimensions</span><span class="p">:</span> <span class="n">List</span><span class="p">[</span><span class="s1">&#39;Dimension&#39;</span><span class="p">],</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
            <span class="kn">from</span><span class="w"> </span><span class="nn">skopt.utils</span><span class="w"> </span><span class="kn">import</span> <span class="n">cook_estimator</span>
            <span class="kn">from</span><span class="w"> </span><span class="nn">skopt.learning.gaussian_process.kernels</span><span class="w"> </span><span class="kn">import</span> <span class="p">(</span><span class="n">Matern</span><span class="p">,</span> <span class="n">ConstantKernel</span><span class="p">)</span>
            <span class="n">kernel_bounds</span> <span class="o">=</span> <span class="p">(</span><span class="mf">0.0001</span><span class="p">,</span> <span class="mi">10000</span><span class="p">)</span>
            <span class="n">kernel</span> <span class="o">=</span> <span class="p">(</span>
                <span class="n">ConstantKernel</span><span class="p">(</span><span class="mf">1.0</span><span class="p">,</span> <span class="n">kernel_bounds</span><span class="p">)</span> <span class="o">*</span> 
                <span class="n">Matern</span><span class="p">(</span><span class="n">length_scale</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">ones</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">dimensions</span><span class="p">)),</span> <span class="n">length_scale_bounds</span><span class="o">=</span><span class="p">[</span><span class="n">kernel_bounds</span> <span class="k">for</span> <span class="n">d</span> <span class="ow">in</span> <span class="n">dimensions</span><span class="p">],</span> <span class="n">nu</span><span class="o">=</span><span class="mf">2.5</span><span class="p">)</span>
            <span class="p">)</span>
            <span class="n">kernel</span> <span class="o">+=</span> <span class="p">(</span>
                <span class="n">ConstantKernel</span><span class="p">(</span><span class="mf">1.0</span><span class="p">,</span> <span class="n">kernel_bounds</span><span class="p">)</span> <span class="o">*</span> 
                <span class="n">Matern</span><span class="p">(</span><span class="n">length_scale</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">ones</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">dimensions</span><span class="p">)),</span> <span class="n">length_scale_bounds</span><span class="o">=</span><span class="p">[</span><span class="n">kernel_bounds</span> <span class="k">for</span> <span class="n">d</span> <span class="ow">in</span> <span class="n">dimensions</span><span class="p">],</span> <span class="n">nu</span><span class="o">=</span><span class="mf">1.5</span><span class="p">)</span>
            <span class="p">)</span>

            <span class="k">return</span> <span class="n">cook_estimator</span><span class="p">(</span><span class="s2">&quot;GP&quot;</span><span class="p">,</span> <span class="n">space</span><span class="o">=</span><span class="n">dimensions</span><span class="p">,</span> <span class="n">kernel</span><span class="o">=</span><span class="n">kernel</span><span class="p">,</span> <span class="n">n_restarts_optimizer</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
</code></pre></div><div class="admonition note"><p class="admonition-title">참고</p><p>사용자 정의 추정기를 제공할 수 있지만, 가능한 매개변수에 대해 연구하고 어떤 매개변수를 사용해야 하는지 분석/이해하는 것은 사용자에게 달려 있습니다. 이 부분에 대해 확신이 없다면, 추가 매개변수 없이 기본값 중 하나 (&quot;ET&quot;가 가장 다재다능한 것으로 입증됨)를 사용하는 것이 좋습니다.</p></div><h2 id="space-options"> 공간 옵션 <a class="headerlink" href="#space-options" title="영구 링크"> ¶ </a></h2><p>추가 공간의 경우, scikit-optimize는 Freqtrade와 결합하여 다음 공간 유형을 제공합니다:</p><ul><li><code>Categorical</code> - 카테고리 목록에서 선택 (예: <code>Categorical([&#39;a&#39;, &#39;b&#39;, &#39;c&#39;], name=&quot;cat&quot;)</code> ) </li><li><code>Integer</code> - 정수 범위에서 선택 (예: <code>Integer(1, 10, name=&#39;rsi&#39;)</code> ) </li><li><code>SKDecimal</code> - 제한된 정밀도로 소수 범위에서 선택 (예: <code>SKDecimal(0.1, 0.5, decimals=3, name=&#39;adx&#39;)</code> ). <em>Freqtrade에서만 사용 가능</em> . </li><li><code>Real</code> - 전체 정밀도로 소수 범위에서 선택 (예: <code>Real(0.1, 0.5, name=&#39;adx&#39;)</code></li></ul><p><code>freqtrade.optimize.space</code> 에서 모두 가져올 수 있으며, <code>Categorical</code> , <code>Integer</code> 및 <code>Real</code> 은 scikit-optimize 공간에 해당하는 별칭일 뿐입니다. <code>SKDecimal</code> 은 Freqtrade에서 제공하여 더 빠른 최적화를 가능하게 합니다. </p><div class="highlight"><pre><code><span class="kn">from</span><span class="w"> </span><span class="nn">freqtrade.optimize.space</span><span class="w"> </span><span class="kn">import</span> <span class="n">Categorical</span><span class="p">,</span> <span class="n">Dimension</span><span class="p">,</span> <span class="n">Integer</span><span class="p">,</span> <span class="n">SKDecimal</span><span class="p">,</span> <span class="n">Real</span>  <span class="c1"># noqa</span>
</code></pre></div><div class="admonition hint"><p class="admonition-title">SKDecimal vs. Real</p><p> 거의 모든 경우에 <code>SKDecimal</code> 을 <code>Real</code> 공간 대신 사용하는 것이 좋습니다. Real 공간은 전체 정확도 (~16 소수점 자리까지)를 제공하지만, 이 정밀도가 필요한 경우는 드물며 불필요하게 긴 하이퍼옵트 시간을 초래합니다. </p><p> 작은 공간 정의 ( <code>SKDecimal(0.10, 0.15, decimals=2, name=&#39;xxx&#39;)</code> )를 가정할 때 - SKDecimal은 5가지 가능성을 가집니다 (<code>[0.10, 0.11, 0.12, 0.13, 0.14, 0.15]</code> ). </p><p> 해당하는 Real 공간 <code>Real(0.10, 0.15 name=&#39;xxx&#39;)</code> 는 거의 무제한의 가능성을 가집니다 (<code>[0.10, 0.010000000001, 0.010000000002, ... 0.014999999999, 0.01500000000]</code> ). </p></div>`,35)])))}};export{t as default};
