import{t as s}from"./tensorboard-c73faffb.js";import{r as a,o as p,c as u,b as t,d as o,u as l,a as n,e as d,w as r}from"./index-ff969378.js";const g="/assets/freqai_moving-window-bdf7f09c.jpg",f={class:"md-content__inner md-typeset"},q=["src"],m={class:"admonition note"},v={class:"danger",open:"open"},b=["src"],y={__name:"FreqAIRunning",setup(I){return(k,e)=>{const i=a("router-link");return p(),u("article",f,[e[93]||(e[93]=t("h1",{id:"running-freqai"},[o(" FreqAI 실행하기 "),t("a",{class:"headerlink",href:"#running-freqai",title:"영구 링크"}," ¶ ")],-1)),e[94]||(e[94]=t("p",null,"적응형 머신러닝 모델을 학습하고 배포하는 방법에는 실시간 배포와 과거 데이터 백테스팅 두 가지가 있습니다. 두 경우 모두 FreqAI는 다음 그림과 같이 주기적으로 모델을 재학습합니다:",-1)),t("p",null,[t("img",{alt:"freqai-window",src:l(g)},null,8,q)]),e[95]||(e[95]=n(`<h2 id="live-deployments"> 실시간 배포 <a class="headerlink" href="#live-deployments" title="영구 링크"> ¶ </a></h2><p>FreqAI는 다음 명령어를 사용하여 드라이/실시간 모드로 실행할 수 있습니다:</p><div class="highlight"><pre><code>freqtrade trade --strategy FreqaiExampleStrategy --config config_freqai.example.json --freqaimodel LightGBMRegressor</code></pre></div><p>실행 시, FreqAI는 설정에 따라 새로운 <code>identifier</code>를 기반으로 새 모델을 학습하기 시작합니다. 학습 후, 모델은 새로운 데이터에 대한 예측을 수행하며, 새로운 모델이 준비되면 교체됩니다. FreqAI는 항상 가장 최근에 학습된 모델을 사용하여 실시간 데이터를 예측합니다. <code>live_retrain_hours</code>를 설정하여 모델 재학습 간격을 조정할 수 있으며, <code>expired_hours</code>를 설정하여 특정 시간 이상 지난 모델을 사용하지 않도록 할 수 있습니다.</p><p>학습된 모델은 기본적으로 디스크에 저장되며, 백테스팅이나 충돌 후 재사용할 수 있습니다. 디스크 공간을 절약하려면 설정 파일에서 <code>&quot;purge_old_models&quot;: true</code>를 설정하여 오래된 모델을 삭제할 수 있습니다.</p><p>저장된 백테스트 모델(또는 이전 드라이/실시간 세션 충돌 모델)에서 실행하려면 특정 모델의 <code>identifier</code>만 지정하면 됩니다:</p><div class="highlight"><pre><code>{
    &quot;freqai&quot;: {
        &quot;identifier&quot;: &quot;example&quot;,
        &quot;live_retrain_hours&quot;: 0.5
    }
}</code></pre></div><p>이 경우, FreqAI는 사전 학습된 모델로 시작하지만, 모델 학습 이후 경과 시간을 확인합니다. <code>live_retrain_hours</code>가 경과하면 새 모델 학습을 시작합니다.</p><h3 id="automatic-data-download"> 자동 데이터 다운로드 <a class="headerlink" href="#automatic-data-download" title="영구 링크"> ¶ </a></h3>`,9)),t("p",null,[e[1]||(e[1]=o("FreqAI는 ")),e[2]||(e[2]=t("code",null,"train_period_days",-1)),e[3]||(e[3]=o("와 ")),e[4]||(e[4]=t("code",null,"startup_candle_count",-1)),e[5]||(e[5]=o("에 정의된 대로 모델 학습에 필요한 데이터를 자동으로 다운로드합니다. 자세한 내용은 ")),d(i,{to:"freqai-parameter-table"},{default:r(()=>e[0]||(e[0]=[o("파라미터 테이블")])),_:1}),e[6]||(e[6]=o("을 참조하세요."))]),e[96]||(e[96]=n(`<h3 id="saving-prediction-data"> 예측 데이터 저장 <a class="headerlink" href="#saving-prediction-data" title="영구 링크"> ¶ </a></h3><p>특정 <code>identifier</code> 모델의 수명 동안 수행된 모든 예측은 <code>historic_predictions.pkl</code>에 저장되어 충돌 후 또는 설정 변경 후 다시 로드할 수 있습니다.</p><h3 id="purging-old-model-data"> 오래된 모델 데이터 삭제 <a class="headerlink" href="#purging-old-model-data" title="영구 링크"> ¶ </a></h3><p>FreqAI는 각 학습 후 새로운 모델 파일을 저장합니다. 이러한 파일은 새로운 시장 조건에 적응하기 위해 생성된 새로운 모델로 인해 오래되게 됩니다. FreqAI를 장기간 실행할 계획이라면 설정 파일에서 <code>purge_old_models</code>를 활성화해야 합니다:</p><div class="highlight"><pre><code>{
    &quot;freqai&quot;: {
        &quot;purge_old_models&quot;: 4,
    }
}</code></pre></div><p>이렇게 하면 디스크 공간을 절약하기 위해 가장 최근에 학습된 네 개의 모델보다 오래된 모든 모델이 자동으로 삭제됩니다. &quot;0&quot;을 입력하면 모델이 삭제되지 않습니다.</p><h2 id="backtesting"> 백테스팅 <a class="headerlink" href="#backtesting" title="영구 링크"> ¶ </a></h2><p>FreqAI 백테스팅 모듈은 다음 명령어로 실행할 수 있습니다:</p><div class="highlight"><pre><code>freqtrade backtesting --strategy FreqaiExampleStrategy --strategy-path freqtrade/templates --config config_examples/config_freqai.example.json --freqaimodel LightGBMRegressor --timerange 20210501-20210701</code></pre></div><p>이 명령어가 기존 설정 파일로 처음 실행되면, FreqAI는 확장된 <code>--timerange</code> 내에서 각 페어에 대해 새로운 모델을 학습합니다.</p><p>백테스팅 모드는 배포 전에 필요한 데이터를 <a href="#downloading-data-to-cover-the-full-backtest-period">다운로드</a>해야 합니다(드라이/실시간 모드에서는 FreqAI가 데이터를 자동으로 다운로드합니다). 백테스팅 시간 범위보다 더 많은 데이터를 다운로드해야 합니다. 이는 FreqAI가 백테스팅 시간 범위의 첫 번째 캔들에 대한 예측을 준비하기 위해 필요한 데이터를 필요로 하기 때문입니다. 다운로드할 데이터 계산에 대한 자세한 내용은 <a href="#deciding-the-size-of-the-sliding-training-window-and-backtesting-duration">여기</a>에서 확인할 수 있습니다.</p><div class="admonition note"><p class="admonition-title">모델 재사용</p><p>학습이 완료되면 동일한 설정 파일로 백테스팅을 다시 실행할 수 있으며, FreqAI는 학습된 모델을 찾아 로드합니다. 이는 전략 내의 매수 및 매도 기준을 조정하거나 하이퍼옵트할 때 유용합니다. 동일한 설정 파일로 새로운 모델을 학습하려면 <code>identifier</code>를 변경해야 합니다. 이렇게 하면 원하는 모델을 <code>identifier</code>를 지정하여 다시 사용할 수 있습니다.</p></div>`,12)),t("div",m,[e[16]||(e[16]=t("p",{class:"admonition-title"},"참고",-1)),t("p",null,[e[8]||(e[8]=o("백테스팅은 전체 백테스트 타이머 범위를 ")),e[9]||(e[9]=t("code",null,"backtest_period_days",-1)),e[10]||(e[10]=o(" 매개변수로 나눈 횟수만큼 ")),e[11]||(e[11]=t("code",null,"set_freqai_targets()",-1)),e[12]||(e[12]=o("를 한 번 호출합니다. 이렇게 하면 타겟이 드라이/실시간 동작을 시뮬레이션하여 앞을 내다보는 편향 없이 동작합니다. 그러나 ")),e[13]||(e[13]=t("code",null,"feature_engineering_*()",-1)),e[14]||(e[14]=o("에서의 특징 정의는 전체 학습 타이머 범위에서 한 번 수행됩니다. 이는 특징이 미래를 내다보지 않도록 해야 함을 의미합니다. 앞을 내다보는 편향에 대한 자세한 내용은 ")),d(i,{to:"strategy-customization"},{default:r(()=>e[7]||(e[7]=[o("일반적인 실수")])),_:1}),e[15]||(e[15]=o("에서 확인할 수 있습니다."))])]),e[97]||(e[97]=n('<hr><h3 id="saving-backtesting-prediction-data"> 백테스팅 예측 데이터 저장 <a class="headerlink" href="#saving-backtesting-prediction-data" title="영구 링크"> ¶ </a></h3><p>전략을 조정할 수 있도록(<strong>특징은 아님</strong>), FreqAI는 백테스팅 중 예측을 자동으로 저장하여 동일한 <code>identifier</code> 모델을 사용하여 향후 백테스트 및 실시간 실행에 재사용할 수 있습니다. 이는 진입/퇴출 기준의 <strong>고급 하이퍼옵트</strong>를 가능하게 하는 성능 향상을 제공합니다.</p><p><code>feather</code> 형식으로 저장된 모든 예측을 포함하는 <code>backtesting_predictions</code>라는 추가 디렉토리가 <code>unique-id</code> 폴더에 생성됩니다.</p><p><strong>특징</strong>을 변경하려면, FreqAI에 새 모델을 학습하도록 신호를 보내기 위해 설정 파일에서 새로운 <code>identifier</code>를 설정해야 합니다.</p><p>특정 백테스트 동안 생성된 모델을 저장하여 새 모델을 학습하는 대신 해당 모델에서 실시간 배포를 시작하려면 설정 파일에서 <code>save_backtest_models</code>를 <code>True</code>로 설정해야 합니다.</p><div class="admonition note"><p class="admonition-title">참고</p><p>모델을 재사용할 수 있도록 하기 위해, freqAI는 길이가 1인 데이터프레임으로 전략을 호출합니다. 전략이 동일한 특징을 생성하기 위해 이보다 더 많은 데이터를 필요로 하는 경우, 실시간 배포를 위해 백테스트 예측을 재사용할 수 없으며, 각 새로운 백테스트에 대해 <code>identifier</code>를 업데이트해야 합니다.</p></div><h3 id="backtest-live-collected-predictions"> 실시간 수집 예측 백테스트 <a class="headerlink" href="#backtest-live-collected-predictions" title="영구 링크"> ¶ </a></h3><p>FreqAI는 <code>--freqai-backtest-live-models</code> 백테스트 매개변수를 통해 실시간 예측을 재사용할 수 있습니다. 이는 드라이/실시간 실행에서 생성된 예측을 재사용하여 비교하거나 다른 연구를 수행할 때 유용합니다.</p><p><code>--timerange</code> 매개변수는 입력할 필요가 없으며, 이는 역사적 예측 파일의 데이터를 통해 자동으로 계산됩니다.</p><h3 id="downloading-data-to-cover-the-full-backtest-period"> 전체 백테스트 기간을 커버하는 데이터 다운로드 <a class="headerlink" href="#downloading-data-to-cover-the-full-backtest-period" title="영구 링크"> ¶ </a></h3>',11)),t("p",null,[e[19]||(e[19]=o("실시간/드라이 배포의 경우, FreqAI는 필요한 데이터를 자동으로 다운로드합니다. 그러나 백테스팅 기능을 사용하려면 ")),e[20]||(e[20]=t("code",null,"download-data",-1)),e[21]||(e[21]=o("를 사용하여 필요한 데이터를 다운로드해야 합니다(")),d(i,{to:"data-download"},{default:r(()=>e[17]||(e[17]=[o("자세한 내용")])),_:1}),e[22]||(e[22]=o("). 백테스팅 시간 범위 시작 전에 충분한 학습 데이터를 확보하기 위해 얼마나 많은 ")),e[23]||(e[23]=t("em",null,"추가",-1)),e[24]||(e[24]=o(" 데이터를 다운로드해야 하는지 이해하는 것이 중요합니다. 추가 데이터의 양은 대략적으로 ")),e[25]||(e[25]=t("code",null,"train_period_days",-1)),e[26]||(e[26]=o("와 ")),e[27]||(e[27]=t("code",null,"startup_candle_count",-1)),e[28]||(e[28]=o("를 백테스팅 시간 범위 시작 날짜로부터 뒤로 이동하여 추정할 수 있습니다. 자세한 내용은 ")),d(i,{to:"freqai-parameter-table"},{default:r(()=>e[18]||(e[18]=[o("파라미터 테이블")])),_:1}),e[29]||(e[29]=o("을 참조하세요."))]),t("p",null,[e[31]||(e[31]=o("예를 들어, ")),e[32]||(e[32]=t("code",null,"--timerange 20210501-20210701",-1)),e[33]||(e[33]=o("을 백테스트하려면, ")),d(i,{to:"freqai-configuration"},{default:r(()=>e[30]||(e[30]=[o("예제 설정")])),_:1}),e[34]||(e[34]=o("에서 ")),e[35]||(e[35]=t("code",null,"train_period_days",-1)),e[36]||(e[36]=o("를 30으로 설정하고, 최대 ")),e[37]||(e[37]=t("code",null,"include_timeframes",-1)),e[38]||(e[38]=o(" 1시간에 대해 ")),e[39]||(e[39]=t("code",null,"startup_candle_count: 40",-1)),e[40]||(e[40]=o("을 설정한 경우, 다운로드할 데이터의 시작 날짜는 ")),e[41]||(e[41]=t("code",null,"20210501",-1)),e[42]||(e[42]=o(" - 30일 - 40 * 1시간 / 24시간 = 20210330 (원하는 학습 시간 범위 시작보다 31.7일 이전)이어야 합니다."))]),e[98]||(e[98]=t("h3",{id:"deciding-the-size-of-the-sliding-training-window-and-backtesting-duration"},[o(" 슬라이딩 학습 창 크기 및 백테스팅 기간 결정 "),t("a",{class:"headerlink",href:"#deciding-the-size-of-the-sliding-training-window-and-backtesting-duration",title:"영구 링크"}," ¶ ")],-1)),t("p",null,[e[44]||(e[44]=o("백테스팅 시간 범위는 구성 파일의 일반적인 ")),e[45]||(e[45]=t("code",null,"--timerange",-1)),e[46]||(e[46]=o(" 매개변수로 정의됩니다. 슬라이딩 학습 창의 기간은 ")),e[47]||(e[47]=t("code",null,"train_period_days",-1)),e[48]||(e[48]=o("로 설정되며, ")),e[49]||(e[49]=t("code",null,"backtest_period_days",-1)),e[50]||(e[50]=o("는 슬라이딩 백테스팅 창으로, 모두 일 단위입니다(")),e[51]||(e[51]=t("code",null,"backtest_period_days",-1)),e[52]||(e[52]=o("는 실시간/드라이 모드에서 일 단위 재학습을 나타내기 위해 부동 소수점으로 설정할 수 있습니다). ")),d(i,{to:"freqai-configuration"},{default:r(()=>e[43]||(e[43]=[o("예제 설정")])),_:1}),e[53]||(e[53]=o("(")),e[54]||(e[54]=t("code",null,"config_examples/config_freqai.example.json",-1)),e[55]||(e[55]=o('에 있음)에서 사용자는 30일의 학습 기간을 사용하고, 이후 7일 동안 백테스트를 요청하고 있습니다. 모델 학습 후, FreqAI는 이후 7일 동안 백테스트를 수행합니다. "슬라이딩 창"은 일주일 앞으로 이동하며(실시간 모드에서 FreqAI가 일주일에 한 번 재학습하는 것을 모방), 새로운 모델은 이전 30일(이전 모델이 백테스트에 사용한 7일 포함)을 사용하여 학습합니다. 이는 ')),e[56]||(e[56]=t("code",null,"--timerange",-1)),e[57]||(e[57]=o("가 끝날 때까지 반복됩니다. 즉, ")),e[58]||(e[58]=t("code",null,"--timerange 20210501-20210701",-1)),e[59]||(e[59]=o("을 설정하면, FreqAI는 ")),e[60]||(e[60]=t("code",null,"--timerange",-1)),e[61]||(e[61]=o("가 끝날 때까지 8개의 별도 모델을 학습하게 됩니다(전체 범위가 8주로 구성되기 때문)."))]),e[99]||(e[99]=n(`<div class="admonition note"><p class="admonition-title">참고</p><p><code>backtest_period_days</code>의 분수 값이 허용되지만, <code>--timerange</code>는 이 값을 나누어 FreqAI가 전체 백테스트 범위를 완료하기 위해 학습해야 하는 모델 수를 결정합니다. 예를 들어, 10일의 <code>--timerange</code>와 0.1의 <code>backtest_period_days</code>를 설정하면, FreqAI는 전체 백테스트를 완료하기 위해 페어당 100개의 모델을 학습해야 합니다. 이 때문에 FreqAI 적응형 학습의 진정한 백테스트는 매우 오랜 시간이 걸립니다. 모델을 완전히 테스트하는 가장 좋은 방법은 드라이 모드로 실행하고 지속적으로 학습하는 것입니다. 이 경우, 백테스팅은 드라이 실행과 동일한 시간이 소요됩니다.</p></div><h2 id="defining-model-expirations"> 모델 만료 정의 <a class="headerlink" href="#defining-model-expirations" title="영구 링크"> ¶ </a></h2><p>드라이/실시간 모드에서 FreqAI는 각 코인 페어를 순차적으로 학습합니다(주 스레드/GPU와 별도로). 이는 모델 간의 나이 차이가 항상 존재함을 의미합니다. 50개의 페어를 학습하고 각 페어가 학습하는 데 5분이 걸리면, 가장 오래된 모델은 4시간 이상이 됩니다. 전략의 특성 시간 척도(거래 기간 목표)가 4시간 미만인 경우 이는 바람직하지 않을 수 있습니다. 설정 파일에서 <code>expiration_hours</code>를 설정하여 모델이 특정 시간 이하인 경우에만 거래 진입을 허용할 수 있습니다:</p><div class="highlight"><pre><code>{
    &quot;freqai&quot;: {
        &quot;expiration_hours&quot;: 0.5,
    }
}</code></pre></div><p>제시된 예제 설정에서 사용자는 ½시간 이하인 모델에 대해서만 예측을 허용합니다.</p><h2 id="controlling-the-model-learning-process"> 모델 학습 과정 제어 <a class="headerlink" href="#controlling-the-model-learning-process" title="영구 링크"> ¶ </a></h2><p>모델 학습 매개변수는 선택한 머신러닝 라이브러리에 고유합니다. FreqAI는 설정 파일의 <code>model_training_parameters</code> 사전을 사용하여 모든 라이브러리의 매개변수를 설정할 수 있습니다. 예제 설정(<code>config_examples/config_freqai.example.json</code>에 있음)에는 <code>Catboost</code>와 <code>LightGBM</code>과 관련된 몇 가지 예제 매개변수가 나와 있지만, 해당 라이브러리 또는 구현하려는 다른 머신러닝 라이브러리에서 사용할 수 있는 모든 매개변수를 추가할 수 있습니다.</p><p>데이터 분할 매개변수는 scikit-learn의 <code>train_test_split()</code> 함수와 관련된 모든 매개변수를 포함할 수 있는 <code>data_split_parameters</code>에 정의됩니다. <code>train_test_split()</code>에는 데이터를 섞거나 섞지 않도록 하는 <code>shuffle</code>이라는 매개변수가 있습니다. 이는 시간적으로 자기 상관된 데이터로 학습을 편향시키지 않도록 하는 데 특히 유용합니다. 이러한 매개변수에 대한 자세한 내용은 <a href="https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html">scikit-learn 웹사이트</a>(외부 웹사이트)에서 확인할 수 있습니다.</p>`,8)),t("p",null,[e[63]||(e[63]=o("FreqAI 고유의 매개변수 ")),e[64]||(e[64]=t("code",null,"label_period_candles",-1)),e[65]||(e[65]=o("는 ")),e[66]||(e[66]=t("code",null,"labels",-1)),e[67]||(e[67]=o("에 사용되는 오프셋(미래의 캔들 수)을 정의합니다. 제시된 ")),d(i,{to:"freqai-configuration"},{default:r(()=>e[62]||(e[62]=[o("예제 설정")])),_:1}),e[68]||(e[68]=o("에서 사용자는 24개의 미래 캔들에 대한 ")),e[69]||(e[69]=t("code",null,"labels",-1)),e[70]||(e[70]=o("를 요청하고 있습니다."))]),e[100]||(e[100]=t("h2",{id:"continual-learning"},[o(" 지속 학습 "),t("a",{class:"headerlink",href:"#continual-learning",title:"영구 링크"}," ¶ ")],-1)),e[101]||(e[101]=t("p",null,[o("설정 파일에서 "),t("code",null,'"continual_learning": true'),o("를 설정하여 지속 학습 방식을 채택할 수 있습니다. "),t("code",null,"continual_learning"),o('을 활성화하면 초기 모델을 처음부터 학습한 후, 이후 학습은 이전 학습의 최종 모델 상태에서 시작됩니다. 이는 새로운 모델에 이전 상태의 "기억"을 제공합니다. 기본적으로 이는 '),t("code",null,"False"),o("로 설정되어 있으며, 이는 모든 새로운 모델이 이전 모델의 입력 없이 처음부터 학습됨을 의미합니다.")],-1)),t("details",v,[e[79]||(e[79]=t("summary",null,"지속 학습은 일정한 매개변수 공간을 강제합니다",-1)),t("p",null,[e[72]||(e[72]=t("code",null,"continual_learning",-1)),e[73]||(e[73]=o("은 학습 간에 모델 매개변수 공간이 변경될 수 없음을 의미하므로, ")),e[74]||(e[74]=t("code",null,"continual_learning",-1)),e[75]||(e[75]=o("이 활성화되면 ")),e[76]||(e[76]=t("code",null,"principal_component_analysis",-1)),e[77]||(e[77]=o("가 자동으로 비활성화됩니다. 힌트: PCA는 매개변수 공간과 특징 수를 변경합니다. PCA에 대해 자세히 알아보려면 ")),d(i,{to:"freqai-feature-engineering"},{default:r(()=>e[71]||(e[71]=[o("여기")])),_:1}),e[78]||(e[78]=o("를 참조하세요."))])]),e[102]||(e[102]=n('<details class="danger" open="open"><summary>실험적 기능</summary><p>이는 현재 점진적 학습에 대한 단순한 접근 방식이며, 시장이 모델에서 멀어질 때 과적합/지역 최소값에 갇힐 가능성이 높습니다. 우리는 주로 실험 목적으로 FreqAI에 이러한 메커니즘을 제공하며, 암호화폐 시장과 같은 혼란스러운 시스템에 대한 지속 학습의 성숙한 접근 방식을 준비하기 위해 준비되어 있습니다.</p></details><h2 id="hyperopt"> 하이퍼옵트 <a class="headerlink" href="#hyperopt" title="영구 링크"> ¶ </a></h2><p>일반적인 Freqtrade 하이퍼옵트와 동일한 명령어를 사용하여 하이퍼옵트할 수 있습니다:</p><div class="highlight"><pre><code>freqtrade hyperopt --hyperopt-loss SharpeHyperOptLoss --strategy FreqaiExampleStrategy --freqaimodel LightGBMRegressor --strategy-path freqtrade/templates --config config_examples/config_freqai.example.json --timerange 20220428-20220507</code></pre></div><p><code>hyperopt</code>는 데이터를 미리 다운로드해야 하며, 이는 <a href="#backtesting">백테스팅</a>과 동일합니다. 또한 FreqAI 전략을 하이퍼옵트할 때 몇 가지 제한 사항을 고려해야 합니다:</p>',5)),t("ul",null,[e[86]||(e[86]=t("li",null,[t("code",null,"--analyze-per-epoch"),o(" 하이퍼옵트 매개변수는 FreqAI와 호환되지 않습니다.")],-1)),t("li",null,[e[81]||(e[81]=t("code",null,"feature_engineering_*()",-1)),e[82]||(e[82]=o(" 및 ")),e[83]||(e[83]=t("code",null,"set_freqai_targets()",-1)),e[84]||(e[84]=o(" 함수에서 지표를 하이퍼옵트할 수 없습니다. 이는 하이퍼옵트를 사용하여 모델 매개변수를 최적화할 수 없음을 의미합니다. 이 예외를 제외하고, 다른 모든 ")),d(i,{to:"hyperopt"},{default:r(()=>e[80]||(e[80]=[o("공간")])),_:1}),e[85]||(e[85]=o("을 최적화할 수 있습니다."))]),e[87]||(e[87]=t("li",null,"백테스팅 지침은 하이퍼옵트에도 적용됩니다.",-1))]),e[103]||(e[103]=t("p",null,"FreqAI와 하이퍼옵트를 결합하는 가장 좋은 방법은 진입/퇴출 임계값/기준을 하이퍼옵트하는 데 중점을 두는 것입니다. 특징에 사용되지 않는 매개변수를 하이퍼옵트하는 데 중점을 두어야 합니다. 예를 들어, 특징 생성에서 롤링 윈도우 길이 또는 예측을 변경하는 FreqAI 설정의 일부를 하이퍼옵트하려고 시도해서는 안 됩니다. FreqAI 전략을 효율적으로 하이퍼옵트하기 위해, FreqAI는 예측을 데이터프레임으로 저장하고 재사용합니다. 따라서 진입/퇴출 임계값/기준만 하이퍼옵트해야 합니다.",-1)),t("p",null,[e[89]||(e[89]=o("FreqAI에서 하이퍼옵트할 수 있는 매개변수의 좋은 예는 ")),d(i,{to:"freqai-feature-engineering"},{default:r(()=>e[88]||(e[88]=[o("Dissimilarity Index (DI)")])),_:1}),e[90]||(e[90]=o()),e[91]||(e[91]=t("code",null,"DI_values",-1)),e[92]||(e[92]=o("를 초과하는 데이터 포인트를 이상치로 간주하는 임계값입니다:"))]),e[104]||(e[104]=n(`<div class="highlight"><pre><code>di_max = IntParameter(low=1, high=20, default=10, space=&#39;buy&#39;, optimize=True, load=True)
dataframe[&#39;outlier&#39;] = np.where(dataframe[&#39;DI_values&#39;] &gt; self.di_max.value/10, 1, 0)</code></pre></div><p>이 특정 하이퍼옵트는 특정 매개변수 공간에 대한 적절한 <code>DI_values</code>를 이해하는 데 도움이 됩니다.</p><h2 id="using-tensorboard"> Tensorboard 사용 <a class="headerlink" href="#using-tensorboard" title="영구 링크"> ¶ </a></h2><div class="admonition note"><p class="admonition-title">가용성</p><p>FreqAI는 XGBoost, 모든 PyTorch 모델, 강화 학습 및 Catboost를 포함한 다양한 모델에 대해 tensorboard를 포함합니다. 다른 모델 유형에 Tensorboard 통합을 원하시면 <a href="https://github.com/freqtrade/freqtrade/issues">Freqtrade GitHub</a>에 이슈를 열어주세요.</p></div><div class="admonition danger"><p class="admonition-title">요구 사항</p><p>Tensorboard 로깅은 FreqAI torch 설치/도커 이미지가 필요합니다.</p></div><p>Tensorboard를 사용하는 가장 쉬운 방법은 설정 파일에서 <code>freqai.activate_tensorboard</code>가 <code>True</code>(기본 설정)로 설정되어 있는지 확인하고, FreqAI를 실행한 다음 별도의 셸을 열고 다음을 실행하는 것입니다:</p><div class="highlight"><pre><code>cd freqtrade
tensorboard --logdir user_data/models/unique-id</code></pre></div><p>여기서 <code>unique-id</code>는 <code>freqai</code> 설정 파일에 설정된 <code>identifier</code>입니다. 이 명령어는 브라우저에서 127.0.0.1:6060(6060은 Tensorboard에서 사용하는 기본 포트)에서 출력을 보려면 별도의 셸에서 실행해야 합니다.</p>`,8)),t("p",null,[t("img",{alt:"tensorboard",src:l(s)},null,8,b)]),e[105]||(e[105]=t("div",{class:"admonition note"},[t("p",{class:"admonition-title"},"성능 향상을 위해 비활성화"),t("p",null,"Tensorboard 로깅은 학습 속도를 저하시킬 수 있으므로 프로덕션 환경에서는 비활성화하는 것이 좋습니다.")],-1))])}}};export{y as default};
