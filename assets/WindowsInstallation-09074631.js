import{r as o,o as e,c as r,b as n,d as a,e as l,w as t,a as i,u as d}from"./index-eb65bd0c.js";const c="/assets/windows_install-649f72c8.png";const u={class:"md-content__inner md-typeset"},w={class:"admonition hint"},h=["src"],b={__name:"WindowsInstallation",setup(m){return(f,s)=>{const p=o("router-link");return e(),r("article",u,[s[15]||(s[15]=n("h1",{id:"windows-installation"},[a(" Windows 설치 "),n("a",{class:"headerlink",href:"#windows-installation",title:"영구 링크"}," ¶ ")],-1)),n("p",null,[s[1]||(s[1]=a(" 우리는 ")),s[2]||(s[2]=n("strong",null," 강력히 ",-1)),s[3]||(s[3]=a(" Windows 사용자가 ")),l(p,{to:"docker-quickstart"},{default:t(()=>s[0]||(s[0]=[a(" Docker ")])),_:1}),s[4]||(s[4]=a(" 를 사용하는 것을 권장합니다. 이는 훨씬 더 쉽고 원활하게 작동하며 (또한 더 안전합니다). "))]),s[16]||(s[16]=i(`<p>만약 이것이 불가능하다면, Windows Linux Subsystem (WSL)을 사용하는 것을 시도해 보세요. Ubuntu 지침이 작동할 것입니다. 그렇지 않으면 아래 지침을 따르세요.</p><p>모든 지침은 Python 3.10+가 설치되어 있고 사용 가능하다고 가정합니다.</p><h2 id="clone-the-git-repository"> Git 저장소 복제 <a class="headerlink" href="#clone-the-git-repository" title="영구 링크"> ¶ </a></h2><p>먼저 다음 명령어를 실행하여 저장소를 복제하세요:</p><div class="highlight"><pre><code><span class="n">git</span> <span class="n">clone</span> <span class="n">https</span><span class="p">://</span><span class="n">github</span><span class="p">.</span><span class="n">com</span><span class="p">/</span><span class="n">freqtrade</span><span class="p">/</span><span class="n">freqtrade</span><span class="p">.</span><span class="n">git</span>
</code></pre></div><p>이제 설치 방법을 선택하세요. 스크립트를 통한 자동 설치(권장) 또는 수동 설치 지침을 따를 수 있습니다.</p><h2 id="install-freqtrade-automatically"> Freqtrade 자동 설치 <a class="headerlink" href="#install-freqtrade-automatically" title="영구 링크"> ¶ </a></h2><h3 id="run-the-installation-script"> 설치 스크립트 실행 <a class="headerlink" href="#run-the-installation-script" title="영구 링크"> ¶ </a></h3><p>스크립트는 설치할 부분을 결정하기 위해 몇 가지 질문을 할 것입니다.</p><div class="highlight"><pre><code><span class="nb">Set-ExecutionPolicy</span> <span class="n">-ExecutionPolicy</span> <span class="n">Bypass</span>
<span class="nb">cd </span><span class="n">freqtrade</span>
<span class="p">.</span> <span class="p">.\\</span><span class="n">setup</span><span class="p">.</span><span class="n">ps1</span>
</code></pre></div><h2 id="install-freqtrade-manually"> Freqtrade 수동 설치 <a class="headerlink" href="#install-freqtrade-manually" title="영구 링크"> ¶ </a></h2><div class="admonition note"><p class="admonition-title">64비트 Python 버전</p><p>Windows에서 백테스팅 또는 하이퍼옵트 시 메모리 제약 문제를 피하기 위해 64비트 Windows와 64비트 Python을 사용해야 합니다. 32비트 Python 버전은 더 이상 Windows에서 지원되지 않습니다.</p></div>`,12)),n("div",w,[s[10]||(s[10]=n("p",{class:"admonition-title"},"힌트",-1)),n("p",null,[s[6]||(s[6]=a(" Windows에서 ")),s[7]||(s[7]=n("a",{href:"https://www.anaconda.com/distribution/"}," Anaconda 배포판 ",-1)),s[8]||(s[8]=a(" 을 사용하면 설치 문제를 크게 줄일 수 있습니다. 자세한 내용은 문서의 ")),l(p,{to:"installation"},{default:t(()=>s[5]||(s[5]=[a(" Anaconda 설치 섹션 ")])),_:1}),s[9]||(s[9]=a(" 을 확인하세요. "))])]),s[17]||(s[17]=i(`<h3 id="install-ta-lib"> ta-lib 설치 <a class="headerlink" href="#install-ta-lib" title="영구 링크"> ¶ </a></h3><p><a href="https://github.com/TA-Lib/ta-lib-python#windows"> ta-lib 문서 </a> 에 따라 ta-lib을 설치하세요. </p><p>Windows에서 소스에서 컴파일하려면 많은 종속성이 필요하므로(부분적인 Visual Studio 설치 필요), Freqtrade는 최신 3개의 Python 버전(3.10, 3.11, 3.12) 및 64비트 Windows용으로 이러한 종속성을 바이너리 휠 형식으로 제공합니다. 이러한 휠은 Windows에서 실행되는 CI에서도 사용되며, Freqtrade와 함께 테스트됩니다.</p><p>다른 버전은 위 링크에서 다운로드해야 합니다.</p><div class="highlight"><pre><code><span class="nb">cd </span><span class="p">\\</span><span class="n">path</span><span class="p">\\</span><span class="n">freqtrade</span>
<span class="n">python</span> <span class="n">-m</span> <span class="n">venv</span> <span class="p">.</span><span class="n">venv</span>
<span class="p">.</span><span class="n">venv</span><span class="p">\\</span><span class="n">Scripts</span><span class="p">\\</span><span class="n">activate</span><span class="p">.</span><span class="n">ps1</span>
<span class="c"># 필요에 따라 휠에서 ta-lib 설치</span>
<span class="c"># 다운로드한 휠 파일 이름에 맞게 아래 파일명을 조정하세요</span>
<span class="n">pip</span> <span class="n">install</span> <span class="p">-</span><span class="n">-find-links</span> <span class="n">build_helpers</span><span class="p">\\</span> <span class="n">TA-Lib</span> <span class="n">-U</span>
<span class="n">pip</span> <span class="n">install</span> <span class="n">-r</span> <span class="n">requirements</span><span class="p">.</span><span class="n">txt</span>
<span class="n">pip</span> <span class="n">install</span> <span class="n">-e</span> <span class="p">.</span>
<span class="n">freqtrade</span>
</code></pre></div><div class="admonition note"><p class="admonition-title">Powershell 사용</p><p>위 설치 스크립트는 64비트 Windows에서 Powershell을 사용하는 것을 가정합니다. 레거시 CMD Windows 콘솔의 명령어는 다를 수 있습니다.</p></div><h3 id="error-during-installation-on-windows"> Windows 설치 중 오류 <a class="headerlink" href="#error-during-installation-on-windows" title="영구 링크"> ¶ </a></h3><div class="highlight"><pre><code>error:<span class="w"> </span>Microsoft<span class="w"> </span>Visual<span class="w"> </span>C++<span class="w"> </span><span class="m">14</span>.0<span class="w"> </span>필요.<span class="w"> </span>다음에서<span class="w"> </span>다운로드하세요:<span class="w"> </span><span class="s2">&quot;Microsoft Visual C++ Build Tools&quot;</span>:<span class="w"> </span>http://landinghub.visualstudio.com/visual-cpp-build-tools
</code></pre></div><p>불행히도, 컴파일이 필요한 많은 패키지는 사전 빌드된 휠을 제공하지 않습니다. 따라서 Python 환경에서 사용할 수 있는 C/C++ 컴파일러를 설치하고 사용 가능하게 해야 합니다.</p>`,9)),n("p",null,[s[12]||(s[12]=n("a",{href:"https://visualstudio.microsoft.com/visual-cpp-build-tools/"}," 여기 ",-1)),s[13]||(s[13]=a(' 에서 Visual C++ 빌드 도구를 다운로드하고 "C++를 사용한 데스크톱 개발"을 기본 설정으로 설치하세요. 불행히도, 이는 큰 다운로드/종속성이므로 WSL2 또는 ')),l(p,{to:"docker-quickstart"},{default:t(()=>s[11]||(s[11]=[a(" docker compose ")])),_:1}),s[14]||(s[14]=a(" 를 먼저 고려해 보세요. "))]),n("p",null,[n("img",{alt:"Windows 설치",src:d(c)},null,8,h)]),s[18]||(s[18]=n("hr",null,null,-1))])}}};export{b as default};
