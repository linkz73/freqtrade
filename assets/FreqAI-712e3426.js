import{r as a,o as d,c as u,b as t,u as l,d as r,e as o,w as n,a as s}from"./index-747ab7f0.js";const p="/assets/freqai_doc_logo-20c2c89c.svg",f="/assets/freqai_algo-cd1143d0.jpg";const g={class:"md-content__inner md-typeset"},q={class:"freqai-header"},m=["src"],A={class:"introduction"},F={class:"admonition note"},v={class:"features"},k={class:"feature-list"},I={class:"general-approach"},b={class:"image-container"},y=["src"],P={class:"ml-vocabulary"},x={class:"vocab-item"},j={__name:"FreqAI",setup(C){return(S,e)=>{const i=a("router-link");return d(),u("article",g,[t("div",q,[t("img",{alt:"freqai-로고",src:l(p),class:"freqai-logo"},null,8,m),e[0]||(e[0]=t("h1",{id:"freqai"},[r(" FreqAI "),t("a",{class:"headerlink",href:"#freqai",title:"고정 링크"},"¶")],-1))]),t("section",A,[e[9]||(e[9]=t("h2",{id:"introduction"},[r(" 소개 "),t("a",{class:"headerlink",href:"#introduction",title:"고정 링크"},"¶")],-1)),e[10]||(e[10]=t("p",null,[r("FreqAI는 입력 신호 세트를 기반으로 시장 예측을 생성하기 위한 예측 머신러닝 모델을 훈련하는 다양한 작업을 자동화하도록 설계된 소프트웨어입니다. 일반적으로 FreqAI는 실시간 데이터에 강력한 머신러닝 라이브러리를 쉽게 배포할 수 있는 샌드박스 역할을 합니다 ("),t("a",{href:"#freqai-position-in-open-source-machine-learning-landscape"},"자세한 내용"),r(").")],-1)),t("div",F,[e[8]||(e[8]=t("p",{class:"admonition-title"},"참고",-1)),t("p",null,[e[2]||(e[2]=r(" FreqAI는 현재와 앞으로도 비영리 오픈소스 프로젝트입니다. FreqAI는 ")),e[3]||(e[3]=t("em",null,"암호화폐 토큰이 없으며",-1)),e[4]||(e[4]=r(", ")),e[5]||(e[5]=t("em",null,"신호를 판매하지 않으며",-1)),e[6]||(e[6]=r(", 현재 ")),o(i,{to:"freqai"},{default:n(()=>e[1]||(e[1]=[r("freqtrade 문서")])),_:1}),e[7]||(e[7]=r(" 외에 별도의 도메인이 없습니다. "))])])]),t("section",v,[e[48]||(e[48]=t("p",null,"주요 기능:",-1)),t("ul",k,[t("li",null,[e[12]||(e[12]=t("strong",null,"자가 적응형 재훈련",-1)),e[13]||(e[13]=r(" - ")),o(i,{to:"freqai-running"},{default:n(()=>e[11]||(e[11]=[r("실시간 배포")])),_:1}),e[14]||(e[14]=r(" 중에 모델을 재훈련하여 시장에 지도 방식으로 자가 적응"))]),t("li",null,[e[16]||(e[16]=t("strong",null,"신속한 특성 엔지니어링",-1)),e[17]||(e[17]=r(" - 간단한 사용자 생성 전략을 기반으로 풍부한 ")),o(i,{to:"freqai-feature-engineering"},{default:n(()=>e[15]||(e[15]=[r("특성 집합")])),_:1}),e[18]||(e[18]=r(" (10k+ 특성) 생성 "))]),e[45]||(e[45]=t("li",null,[t("strong",null,"고성능"),r(" - 스레딩을 통해 모델 추론(예측) 및 봇 거래 작업과 별도의 스레드에서 (또는 GPU 사용 가능 시 GPU에서) 적응형 모델 재훈련 가능. 최신 모델과 데이터는 빠른 추론을 위해 RAM에 유지됨")],-1)),t("li",null,[e[20]||(e[20]=t("strong",null,"현실적인 백테스팅",-1)),e[21]||(e[21]=r(" - 재훈련을 자동화하는 ")),o(i,{to:"freqai-running"},{default:n(()=>e[19]||(e[19]=[r("백테스팅 모듈")])),_:1}),e[22]||(e[22]=r("로 과거 데이터에 대한 자가 적응 훈련 에뮬레이션"))]),t("li",null,[e[24]||(e[24]=t("strong",null,"확장성",-1)),e[25]||(e[25]=r(" - 일반화되고 강력한 아키텍처를 통해 Python에서 사용 가능한 모든 ")),o(i,{to:"freqai-configuration"},{default:n(()=>e[23]||(e[23]=[r("머신러닝 라이브러리/방법")])),_:1}),e[26]||(e[26]=r("을 통합 가능. 현재 분류기, 회귀기 및 CNN(합성곱 신경망)을 포함한 8가지 예제 제공"))]),t("li",null,[e[28]||(e[28]=t("strong",null,"스마트 이상치 제거",-1)),e[29]||(e[29]=r(" - 다양한 ")),o(i,{to:"freqai-feature-engineering"},{default:n(()=>e[27]||(e[27]=[r("이상치 감지 기법")])),_:1}),e[30]||(e[30]=r("을 사용하여 훈련 및 예측 데이터 세트에서 이상치 제거"))]),t("li",null,[e[32]||(e[32]=t("strong",null,"충돌 복원력",-1)),e[33]||(e[33]=r(" - 훈련된 모델을 디스크에 저장하여 충돌 후 빠르고 쉽게 다시 로드하고, 지속적인 드라이/라이브 실행을 위해 ")),o(i,{to:"freqai-running"},{default:n(()=>e[31]||(e[31]=[r("오래된 파일 삭제")])),_:1})]),t("li",null,[e[35]||(e[35]=t("strong",null,"자동 데이터 정규화",-1)),e[36]||(e[36]=r(" - 스마트하고 통계적으로 안전한 방식으로 ")),o(i,{to:"freqai-feature-engineering"},{default:n(()=>e[34]||(e[34]=[r("데이터 정규화")])),_:1})]),e[46]||(e[46]=t("li",null,[t("strong",null,"자동 데이터 다운로드"),r(" - 데이터 다운로드를 위한 시간 범위를 계산하고 과거 데이터 업데이트(실시간 배포 시)")],-1)),e[47]||(e[47]=t("li",null,[t("strong",null,"수신 데이터 정리"),r(" - 훈련 및 모델 추론 전에 NaN 값을 안전하게 처리")],-1)),t("li",null,[e[38]||(e[38]=t("strong",null,"차원 축소",-1)),e[39]||(e[39]=r(" - ")),o(i,{to:"freqai-feature-engineering"},{default:n(()=>e[37]||(e[37]=[r("주성분 분석(PCA)")])),_:1}),e[40]||(e[40]=r("을 통해 훈련 데이터 크기 축소"))]),t("li",null,[e[42]||(e[42]=t("strong",null,"봇 플릿 배포",-1)),e[43]||(e[43]=r(" - 하나의 봇이 모델을 훈련시키는 동안 여러 ")),o(i,{to:"producer-consumer"},{default:n(()=>e[41]||(e[41]=[r("소비자")])),_:1}),e[44]||(e[44]=r(" 봇이 신호를 사용하도록 설정"))])])]),e[68]||(e[68]=s('<section class="quick-start"><h2 id="quick-start"> 빠른 시작 <a class="headerlink" href="#quick-start" title="고정 링크">¶</a></h2><p>FreqAI를 빠르게 테스트하는 가장 쉬운 방법은 다음 명령으로 드라이 모드에서 실행하는 것입니다:</p><div class="highlight"><pre><code>freqtrade trade --config config_examples/config_freqai.example.json --strategy FreqaiExampleStrategy --freqaimodel LightGBMRegressor --strategy-path freqtrade/templates</code></pre></div><p>자동 데이터 다운로드의 부팅 프로세스와 동시 훈련 및 거래가 시작되는 것을 볼 수 있습니다.</p><div class="admonition danger"><p class="admonition-title">프로덕션용이 아님</p><p>Freqtrade 소스 코드와 함께 제공되는 예제 전략은 다양한 FreqAI 기능을 시연/테스트하기 위해 설계되었습니다. 또한 개발자와 사용자 간의 벤치마크로 사용할 수 있도록 소형 컴퓨터에서 실행되도록 설계되었습니다. 이것은 <em>프로덕션 환경에서 실행하도록 설계되지 않았습니다</em>.</p></div><p> 시작점으로 사용할 예제 전략, 예측 모델 및 설정은 각각 <code>freqtrade/templates/FreqaiExampleStrategy.py</code>, <code>freqtrade/freqai/prediction_models/LightGBMRegressor.py</code>, <code>config_examples/config_freqai.example.json</code>에서 찾을 수 있습니다. </p></section>',1)),t("section",I,[e[56]||(e[56]=t("h2",{id:"general-approach"},[r(" 일반적인 접근 방식 "),t("a",{class:"headerlink",href:"#general-approach",title:"고정 링크"},"¶")],-1)),t("p",null,[e[50]||(e[50]=r(" 사용자는 FreqAI에 ")),e[51]||(e[51]=t("em",null,"기본 지표",-1)),e[52]||(e[52]=r(" (")),o(i,{to:"strategy-customization"},{default:n(()=>e[49]||(e[49]=[r("일반적인 Freqtrade 전략")])),_:1}),e[53]||(e[53]=r("과 동일한 방식)와 목표값(")),e[54]||(e[54]=t("em",null,"라벨",-1)),e[55]||(e[55]=r(")을 제공합니다. 화이트리스트의 각 페어에 대해 FreqAI는 사용자 지정 지표 입력을 기반으로 대상 값을 예측하는 모델을 훈련시킵니다. 그런 다음 모델은 시장 조건에 적응하기 위해 사전 결정된 빈도로 계속 재훈련됩니다. FreqAI는 전략을 백테스트(과거 데이터에 대한 주기적인 재훈련으로 현실을 에뮬레이션)하고 드라이/라이브 실행을 배포하는 기능을 모두 제공합니다. 드라이/라이브 조건에서 FreqAI는 모델을 가능한 최신 상태로 유지하기 위해 백그라운드 스레드에서 지속적인 재훈련을 설정할 수 있습니다. "))]),e[57]||(e[57]=t("p",null,"데이터 처리 파이프라인 및 모델 사용을 설명하는 알고리즘 개요는 다음과 같습니다.",-1)),t("div",b,[t("img",{alt:"freqai-알고리즘",src:l(f),class:"freqai-algo"},null,8,y)])]),t("section",P,[e[62]||(e[62]=t("h3",{id:"important-machine-learning-vocabulary"},[r(" 중요한 머신러닝 용어 "),t("a",{class:"headerlink",href:"#important-machine-learning-vocabulary",title:"고정 링크"},"¶")],-1)),e[63]||(e[63]=t("div",{class:"vocab-item"},[t("p",null,[t("strong",null,"특성(Features)"),r(" - 모델이 훈련되는 과거 데이터 기반 파라미터입니다. 단일 캔들의 모든 특성은 벡터로 저장됩니다. FreqAI에서는 전략 내에서 구성할 수 있는 모든 것으로부터 특성 데이터 세트를 구축합니다.")])],-1)),e[64]||(e[64]=t("div",{class:"vocab-item"},[t("p",null,[t("strong",null,"라벨(Labels)"),r(" - 모델이 훈련되는 대상 값입니다. 각 특성 벡터는 전략 내에서 정의하는 단일 라벨과 연결됩니다. 이러한 라벨은 의도적으로 미래를 바라보며 모델이 예측하도록 훈련시키는 대상입니다.")])],-1)),t("div",x,[t("p",null,[e[59]||(e[59]=t("strong",null,"훈련(Training)",-1)),e[60]||(e[60]=r(' - 모델이 특성 세트를 관련 라벨과 일치시키도록 "가르치는" 과정입니다. 다양한 유형의 모델은 다양한 방식으로 "학습"하므로 특정 응용 프로그램에 하나가 다른 것보다 더 나을 수 있습니다. FreqAI에 이미 구현된 다양한 모델에 대한 자세한 정보는 ')),o(i,{to:"freqai-configuration"},{default:n(()=>e[58]||(e[58]=[r("여기")])),_:1}),e[61]||(e[61]=r("에서 찾을 수 있습니다."))])]),e[65]||(e[65]=t("div",{class:"vocab-item"},[t("p",null,[t("strong",null,"훈련 데이터(Train data)"),r(' - 모델에게 대상 예측 방법을 "가르치기" 위해 훈련 중에 모델에 공급되는 특성 데이터 세트의 하위 집합입니다. 이 데이터는 모델에서 가중치 연결에 직접적인 영향을 미칩니다.')])],-1)),e[66]||(e[66]=t("div",{class:"vocab-item"},[t("p",null,[t("strong",null,"테스트 데이터(Test data)"),r(" - 훈련 후 모델의 성능을 평가하는 데 사용되는 특성 데이터 세트의 하위 집합입니다. 이 데이터는 모델 내 노드 가중치에 영향을 주지 않습니다.")])],-1)),e[67]||(e[67]=t("div",{class:"vocab-item"},[t("p",null,[t("strong",null,"추론(Inferencing)"),r(" - 훈련된 모델에 예측을 수행할 새로운 보이지 않은 데이터를 공급하는 프로세스입니다.")])],-1))]),e[69]||(e[69]=s(`<section class="installation"><h2 id="install-prerequisites"> 사전 요구 사항 설치 <a class="headerlink" href="#install-prerequisites" title="고정 링크">¶</a></h2><p>일반적인 Freqtrade 설치 과정에서 FreqAI 종속성을 설치할지 묻습니다. FreqAI를 사용하려면 이 질문에 &quot;예&quot;라고 답해야 합니다. &quot;예&quot;라고 답하지 않았다면 설치 후에 다음과 같이 수동으로 이러한 종속성을 설치할 수 있습니다:</p><div class="highlight"><pre><code>pip install -r requirements-freqai.txt</code></pre></div><div class="admonition note"><p class="admonition-title">참고</p><p>Catboost는 라즈베리파이와 같은 저전력 arm 기기에서는 설치되지 않습니다. 이 플랫폼에 대한 바이너리를 제공하지 않기 때문입니다.</p></div><h3 id="usage-with-docker"> 도커와 함께 사용하기 <a class="headerlink" href="#usage-with-docker" title="고정 링크">¶</a></h3><p>도커를 사용하고 있다면, FreqAI 종속성이 포함된 전용 태그를 <code>:freqai</code>로 사용할 수 있습니다. 따라서 도커 컴포즈 파일의 이미지 줄을 <code>image: freqtradeorg/freqtrade:stable_freqai</code>로 바꿀 수 있습니다. 이 이미지에는 일반 FreqAI 종속성이 포함되어 있습니다. 네이티브 설치와 마찬가지로 Catboost는 ARM 기반 기기에서 사용할 수 없습니다. PyTorch 또는 강화 학습을 사용하려면 torch 또는 RL 태그인 <code>image: freqtradeorg/freqtrade:stable_freqaitorch</code>, <code>image: freqtradeorg/freqtrade:stable_freqairl</code>을 사용해야 합니다.</p><div class="admonition note"><p class="admonition-title">docker-compose-freqai.yml</p><p> FreqAI를 위한 명시적인 도커 컴포즈 파일을 <code>docker/docker-compose-freqai.yml</code>에서 제공합니다. 이는 <code>docker compose -f docker/docker-compose-freqai.yml run ...</code>로 사용하거나, 원본 도커 파일을 대체하기 위해 복사할 수 있습니다. 이 도커 컴포즈 파일에는 도커 컨테이너 내에서 GPU 리소스를 활성화하기 위한 (기본적으로 비활성화된) 섹션도 포함되어 있습니다. 이는 시스템에 GPU 리소스가 있다고 가정합니다. </p></div></section><section class="ml-landscape"><h3 id="freqai-position-in-open-source-machine-learning-landscape"> 오픈 소스 머신러닝 환경에서의 FreqAI 위치 <a class="headerlink" href="#freqai-position-in-open-source-machine-learning-landscape" title="고정 링크">¶</a></h3><p> 주식/암호화폐 시장과 같은 혼란스러운 시계열 기반 시스템을 예측하려면 광범위한 가설을 테스트하기 위한 다양한 도구가 필요합니다. 다행히도 강력한 머신러닝 라이브러리 (예: <code>scikit-learn</code>)의 최근 발전으로 다양한 연구 가능성이 열렸습니다. 다양한 분야의 과학자들이 이제 수많은 확립된 머신러닝 알고리즘에 대한 연구를 쉽게 프로토타이핑할 수 있습니다. 마찬가지로, 이러한 사용자 친화적인 라이브러리는 &quot;시민 과학자&quot;가 기본적인 Python 기술을 데이터 탐색에 활용할 수 있게 합니다. 그러나 이러한 머신러닝 라이브러리를 과거 및 실시간 혼돈 데이터 소스에 적용하는 것은 물류적으로 어렵고 비용이 많이 들 수 있습니다. 또한 강력한 데이터 수집, 저장 및 처리는 별개의 과제를 제시합니다. <a href="#freqai"><code>FreqAI</code></a>는 시장 예측을 위한 적응형 모델링의 실시간 배포를 위한 일반화되고 확장 가능한 오픈 소스 프레임워크를 제공하는 것을 목표로 합니다. <code>FreqAI</code> 프레임워크는 본질적으로 오픈 소스 머신러닝 라이브러리의 풍부한 세계를 위한 샌드박스입니다. <code>FreqAI</code> 샌드박스 내에서 사용자는 무료 24/7 혼돈 데이터 소스인 암호화폐 거래소 데이터에 대해 창의적인 가설을 테스트하기 위해 다양한 타사 라이브러리를 결합할 수 있다는 것을 알게 됩니다. </p></section><section class="citation"><h3 id="citing-freqai"> FreqAI 인용하기 <a class="headerlink" href="#citing-freqai" title="고정 링크">¶</a></h3><p>FreqAI는 <a href="https://joss.theoj.org/papers/10.21105/joss.04864">오픈 소스 소프트웨어 저널(Journal of Open Source Software)에 게재</a>되었습니다. 연구에서 FreqAI가 유용하다면 다음 인용을 사용해 주세요:</p><div class="highlight"><pre><code>@article{Caulk2022, 
    doi = {10.21105/joss.04864},
    url = {https://doi.org/10.21105/joss.04864},
    year = {2022}, publisher = {The Open Journal},
    volume = {7}, number = {80}, pages = {4864},
    author = {Robert A. Caulk and Elin Törnquist and Matthias Voppichler and Andrew R. Lawless and Ryan McMullan and Wagner Costa Santos and Timothy C. Pogue and Johan van der Vlugt and Stefan P. Gehring and Pascal Schmidt},
    title = {FreqAI: generalizing adaptive modeling for chaotic time-series market forecasts},
    journal = {Journal of Open Source Software} 
}</code></pre></div></section><section class="common-pitfalls"><h2 id="common-pitfalls"> 일반적인 함정 <a class="headerlink" href="#common-pitfalls" title="고정 링크">¶</a></h2><p>FreqAI는 동적 <code>VolumePairlists</code>(또는 페어를 동적으로 추가하고 제거하는 페어리스트 필터)와 결합할 수 없습니다. 이는 성능상의 이유 때문입니다 - FreqAI는 빠른 예측/재훈련에 의존합니다. 이를 효과적으로 수행하기 위해서는 드라이/라이브 인스턴스 시작 시 모든 훈련 데이터를 다운로드해야 합니다. FreqAI는 자동으로 새 캔들을 저장하고 추가하여 향후 재훈련을 위해 준비합니다. 즉, 볼륨 페어리스트로 인해 드라이 런 중에 나중에 새 페어가 도착하면 데이터가 준비되어 있지 않을 것입니다. 그러나 FreqAI는 <code>ShufflePairlist</code> 또는 총 페어리스트를 일정하게 유지하는 <code>VolumePairlist</code>(단, 볼륨에 따라 페어 순서를 재정렬)와는 함께 작동합니다.</p></section><section class="learning-materials"><h2 id="additional-learning-materials"> 추가 학습 자료 <a class="headerlink" href="#additional-learning-materials" title="고정 링크">¶</a></h2><p>여기에는 FreqAI의 다양한 구성 요소에 대한 더 깊은 통찰을 제공하는 외부 자료를 모았습니다:</p><ul class="learning-list"><li><a href="https://emergentmethods.medium.com/real-time-head-to-head-adaptive-modeling-of-financial-market-data-using-xgboost-and-catboost-995a115a7495">실시간 직접 비교: XGBoost와 CatBoost를 사용한 금융 시장 데이터의 적응형 모델링</a></li><li><a href="https://emergentmethods.medium.com/freqai-from-price-to-prediction-6fadac18b665">FreqAI - 가격에서 예측까지</a></li></ul></section><section class="support"><h2 id="support"> 지원 <a class="headerlink" href="#support" title="고정 링크">¶</a></h2><p>FreqAI에 대한 지원은 <a href="https://discord.gg/Jd8JYeWHc4">Freqtrade 디스코드</a>, 전용 <a href="https://discord.gg/7AMWACmbjT">FreqAI 디스코드</a>, 그리고 <a href="https://github.com/freqtrade/freqtrade/issues">깃허브 이슈</a>를 포함한 다양한 곳에서 찾을 수 있습니다.</p></section><section class="credits"><h2 id="credits"> 크레딧 <a class="headerlink" href="#credits" title="고정 링크">¶</a></h2><p>FreqAI는 프로젝트에 특정 기술을 기여하는 여러 개인에 의해 개발되었습니다.</p><div class="credit-item"><p>개념 및 소프트웨어 개발: Robert Caulk @robcaulk</p><p>이론적 브레인스토밍 및 데이터 분석: Elin Törnquist @th0rntwig</p><p>코드 검토 및 소프트웨어 아키텍처 브레인스토밍: @xmatthias</p><p>소프트웨어 개발: Wagner Costa @wagnercosta Emre Suzen @aemr3 Timothy Pogue @wizrds</p><p>베타 테스트 및 버그 보고: Stefan Gehring @bloodhunter4rc, @longyu, Andrew Lawless @paranoidandy, Pascal Schmidt @smidelis, Ryan McMullan @smarmau, Juha Nykänen @suikula, Johan van der Vlugt @jooopiert, Richárd Józsa @richardjosza</p></div></section>`,7))])}}};export{j as default};
