import{r as a,o as d,c as u,b as t,u as l,d as i,e as o,w as n,a as s}from"./index-a1bb88b6.js";const p="/assets/freqai_doc_logo-20c2c89c.svg",f="/assets/freqai_algo-cd1143d0.jpg";const g={class:"md-content__inner md-typeset"},q={class:"freqai-header"},m=["src"],A={class:"introduction"},F={class:"admonition note"},v={class:"features"},k={class:"feature-list"},I={class:"general-approach"},b={class:"image-container"},y=["src"],P={class:"ml-vocabulary"},x={class:"vocab-item"},j={__name:"FreqAI",setup(C){return(S,e)=>{const r=a("router-link");return d(),u("article",g,[t("div",q,[t("img",{alt:"freqai-로고",src:l(p),class:"freqai-logo"},null,8,m),e[0]||(e[0]=t("h1",{id:"freqai"},[i(" FreqAI "),t("a",{class:"headerlink",href:"#freqai",title:"고정 링크"},"¶")],-1))]),t("section",A,[e[9]||(e[9]=t("h2",{id:"introduction"},[i(" 소개 "),t("a",{class:"headerlink",href:"#introduction",title:"고정 링크"},"¶")],-1)),e[10]||(e[10]=t("p",null,[i("FreqAI는 시장 예측을 위한 머신러닝 모델을 자동으로 학습시키는 소프트웨어입니다. 주어진 입력 데이터를 기반으로 시장을 예측하며, 실시간 데이터에 강력한 머신러닝 라이브러리를 쉽게 적용할 수 있는 테스트 환경을 제공합니다 ("),t("a",{href:"#freqai-position-in-open-source-machine-learning-landscape"},"자세한 내용"),i(").")],-1)),t("div",F,[e[8]||(e[8]=t("p",{class:"admonition-title"},"참고",-1)),t("p",null,[e[2]||(e[2]=i(" FreqAI는 현재와 앞으로도 비영리 오픈소스 프로젝트로 운영됩니다. FreqAI는 ")),e[3]||(e[3]=t("em",null,"암호화폐 토큰을 발행하지 않으며",-1)),e[4]||(e[4]=i(", ")),e[5]||(e[5]=t("em",null,"거래 신호를 판매하지 않으며",-1)),e[6]||(e[6]=i(", 현재 ")),o(r,{to:"freqai"},{default:n(()=>e[1]||(e[1]=[i("freqtrade 공식 문서")])),_:1}),e[7]||(e[7]=i(" 외에 별도의 웹사이트를 운영하지 않습니다. "))])])]),t("section",v,[e[49]||(e[49]=t("p",null,"주요 기능:",-1)),t("ul",k,[t("li",null,[e[12]||(e[12]=t("strong",null,"자동 재학습",-1)),e[13]||(e[13]=i(" - ")),o(r,{to:"freqai-running"},{default:n(()=>e[11]||(e[11]=[i("실시간 운영")])),_:1}),e[14]||(e[14]=i(" 중에 모델을 자동으로 재학습시켜 시장 변화에 적응"))]),t("li",null,[e[16]||(e[16]=t("strong",null,"효율적인 특성 엔지니어링",-1)),e[17]||(e[17]=i(" - 사용자가 정의한 간단한 전략을 기반으로 풍부한 ")),o(r,{to:"freqai-feature-engineering"},{default:n(()=>e[15]||(e[15]=[i("특성 집합")])),_:1}),e[18]||(e[18]=i(" (10,000개 이상의 특성) 자동 생성 "))]),e[46]||(e[46]=t("li",null,[t("strong",null,"고성능 처리"),i(" - 멀티스레딩을 통해 모델 추론(예측)과 거래를 별도의 스레드에서 처리하며, GPU 사용이 가능한 경우 자동으로 GPU에서 모델 재학습 수행. 최신 모델과 데이터는 빠른 추론을 위해 메모리에 캐시됨")],-1)),t("li",null,[e[20]||(e[20]=t("strong",null,"실제와 유사한 백테스팅",-1)),e[21]||(e[21]=i(" - 자동 재학습 기능이 포함된 ")),o(r,{to:"freqai-running"},{default:n(()=>e[19]||(e[19]=[i("백테스팅 모듈")])),_:1}),e[22]||(e[22]=i("로 과거 데이터에 대한 적응형 학습 시뮬레이션 제공"))]),t("li",null,[e[24]||(e[24]=t("strong",null,"확장성",-1)),e[25]||(e[25]=i(" - 범용적이고 강력한 아키텍처를 통해 Python에서 사용 가능한 모든 ")),o(r,{to:"freqai-configuration"},{default:n(()=>e[23]||(e[23]=[i("머신러닝 라이브러리/방법론")])),_:1}),e[26]||(e[26]=i(" 통합 가능. 현재 분류기, 회귀 분석, CNN(합성곱 신경망) 등 8가지 예제 제공"))]),t("li",null,[e[28]||(e[28]=t("strong",null,"스마트 이상치 제거",-1)),e[29]||(e[29]=i(" - 다양한 ")),o(r,{to:"freqai-feature-engineering"},{default:n(()=>e[27]||(e[27]=[i("이상치 감지 기법")])),_:1}),e[30]||(e[30]=i("을 활용하여 학습 및 예측 데이터셋에서 이상치 자동 제거"))]),t("li",null,[e[32]||(e[32]=t("strong",null,"장애 복구",-1)),e[33]||(e[33]=i(" - 학습된 모델을 디스크에 저장하여 시스템 장애 발생 시 신속하게 복구 가능. 지속적인 시뮬레이션/실시간 운영을 위해 ")),o(r,{to:"freqai-running"},{default:n(()=>e[31]||(e[31]=[i("오래된 파일 자동 정리")])),_:1})]),t("li",null,[e[35]||(e[35]=t("strong",null,"자동 데이터 정규화",-1)),e[36]||(e[36]=i(" - 통계적으로 안전하고 스마트한 방식의 ")),o(r,{to:"freqai-feature-engineering"},{default:n(()=>e[34]||(e[34]=[i("데이터 정규화")])),_:1}),e[37]||(e[37]=i(" 수행"))]),e[47]||(e[47]=t("li",null,[t("strong",null,"자동 데이터 다운로드"),i(" - 필요한 데이터의 시간 범위를 자동으로 계산하고 실시간 운영 시 과거 데이터 자동 업데이트")],-1)),e[48]||(e[48]=t("li",null,[t("strong",null,"데이터 전처리"),i(" - 학습 및 모델 추론 전에 NaN 값을 안전하게 처리하여 데이터 품질 보장")],-1)),t("li",null,[e[39]||(e[39]=t("strong",null,"차원 축소",-1)),e[40]||(e[40]=i(" - ")),o(r,{to:"freqai-feature-engineering"},{default:n(()=>e[38]||(e[38]=[i("주성분 분석(PCA)")])),_:1}),e[41]||(e[41]=i("을 통한 학습 데이터 차원 효율적 축소"))]),t("li",null,[e[43]||(e[43]=t("strong",null,"봇 플릿 운영",-1)),e[44]||(e[44]=i(" - 하나의 봇이 모델을 학습시키는 동안 여러 ")),o(r,{to:"producer-consumer"},{default:n(()=>e[42]||(e[42]=[i("소비자")])),_:1}),e[45]||(e[45]=i(" 봇이 생성된 신호를 활용하는 분산 구조 지원"))])])]),e[69]||(e[69]=s('<section class="quick-start"><h2 id="quick-start"> 빠른 시작 <a class="headerlink" href="#quick-start" title="고정 링크">¶</a></h2><p>FreqAI를 가장 빠르게 테스트해볼 수 있는 방법은 다음 명령으로 시뮬레이션 모드에서 실행하는 것입니다:</p><div class="highlight"><pre><code>freqtrade trade --config config_examples/config_freqai.example.json --strategy FreqaiExampleStrategy --freqaimodel LightGBMRegressor --strategy-path freqtrade/templates</code></pre></div><p>명령을 실행하면 자동으로 데이터를 다운로드하고 모델 학습과 거래를 시작하는 것을 확인할 수 있습니다.</p><div class="admonition danger"><p class="admonition-title">실제 거래에 사용 금지</p><p>Freqtrade 소스 코드에 포함된 예제 전략들은 FreqAI의 다양한 기능을 시연하고 테스트하기 위한 용도로 제작되었습니다. 또한 개발자와 사용자들이 벤치마크로 활용할 수 있도록 소형 컴퓨터에서도 실행 가능하게 설계되었습니다. 이 예제들은 <em>실제 거래 환경에서 사용하도록 설계되지 않았습니다</em>.</p></div><p> 시작점으로 활용할 수 있는 예제 전략, 예측 모델, 설정 파일은 각각 <code>freqtrade/templates/FreqaiExampleStrategy.py</code>, <code>freqtrade/freqai/prediction_models/LightGBMRegressor.py</code>, <code>config_examples/config_freqai.example.json</code>에서 확인할 수 있습니다. </p></section>',1)),t("section",I,[e[57]||(e[57]=t("h2",{id:"general-approach"},[i(" 기본 동작 방식 "),t("a",{class:"headerlink",href:"#general-approach",title:"고정 링크"},"¶")],-1)),t("p",null,[e[51]||(e[51]=i("사용자는 FreqAI에 ")),e[52]||(e[52]=t("em",null,"기본 지표",-1)),e[53]||(e[53]=i("(")),o(r,{to:"strategy-customization"},{default:n(()=>e[50]||(e[50]=[i("일반적인 Freqtrade 전략")])),_:1}),e[54]||(e[54]=i("과 동일한 방식)와 예측하고자 하는 목표값(")),e[55]||(e[55]=t("em",null,"라벨",-1)),e[56]||(e[56]=i(")을 제공합니다. FreqAI는 화이트리스트에 있는 각 거래 쌍에 대해 사용자가 정의한 지표를 입력으로 받아 목표값을 예측하는 모델을 학습시킵니다. 이후 모델은 시장 상황 변화에 적응하기 위해 사전에 정의된 주기로 자동 재학습됩니다. FreqAI는 과거 데이터를 사용한 백테스팅(주기적 재학습을 통한 실제 환경 시뮬레이션)과 실시간 거래 배포를 모두 지원합니다. 실시간/시뮬레이션 환경에서는 백그라운드 스레드에서 지속적인 재학습을 수행하여 모델이 항상 최신 시장 상황을 반영하도록 합니다."))]),e[58]||(e[58]=t("p",null,"데이터 처리 파이프라인과 모델 활용 과정을 설명하는 알고리즘 개요는 다음과 같습니다:",-1)),t("div",b,[t("img",{alt:"freqai-알고리즘",src:l(f),class:"freqai-algo"},null,8,y)])]),t("section",P,[e[63]||(e[63]=t("h3",{id:"important-machine-learning-vocabulary"},[i(" 주요 머신러닝 용어 "),t("a",{class:"headerlink",href:"#important-machine-learning-vocabulary",title:"고정 링크"},"¶")],-1)),e[64]||(e[64]=t("div",{class:"vocab-item"},[t("p",null,[t("strong",null,"특성(Features)"),i(" - 모델이 학습에 사용하는 과거 데이터의 속성들입니다. 각 캔들의 모든 특성은 벡터 형태로 저장됩니다. FreqAI에서는 전략에서 정의할 수 있는 모든 요소를 특성 데이터셋으로 구성할 수 있습니다.")])],-1)),e[65]||(e[65]=t("div",{class:"vocab-item"},[t("p",null,[t("strong",null,"라벨(Labels)"),i(" - 모델이 예측해야 하는 목표값입니다. 각 특성 벡터는 전략에서 정의한 하나의 라벨과 연결됩니다. 이러한 라벨들은 모델이 미래를 예측하도록 학습하는 데 사용되는 목표값입니다.")])],-1)),t("div",x,[t("p",null,[e[60]||(e[60]=t("strong",null,"학습(Training)",-1)),e[61]||(e[61]=i(' - 모델이 특성과 해당하는 라벨 간의 관계를 "학습"하는 과정입니다. 각 모델 유형마다 "학습" 방식이 다르므로, 특정 용도에 따라 적합한 모델이 달라질 수 있습니다. FreqAI에 이미 구현된 다양한 모델에 대한 자세한 정보는 ')),o(r,{to:"freqai-configuration"},{default:n(()=>e[59]||(e[59]=[i("여기")])),_:1}),e[62]||(e[62]=i("에서 확인할 수 있습니다."))])]),e[66]||(e[66]=t("div",{class:"vocab-item"},[t("p",null,[t("strong",null,"학습 데이터(Train data)"),i(' - 모델이 예측 방법을 "학습"하기 위해 사용하는 특성 데이터셋의 일부입니다. 이 데이터는 모델의 가중치를 직접적으로 조정하는 데 사용됩니다.')])],-1)),e[67]||(e[67]=t("div",{class:"vocab-item"},[t("p",null,[t("strong",null,"테스트 데이터(Test data)"),i(" - 학습이 완료된 후 모델의 성능을 평가하는 데 사용되는 특성 데이터셋의 일부입니다. 이 데이터는 모델의 가중치에 영향을 주지 않습니다.")])],-1)),e[68]||(e[68]=t("div",{class:"vocab-item"},[t("p",null,[t("strong",null,"추론(Inferencing)"),i(" - 학습된 모델에 새로운 데이터를 입력하여 예측값을 얻는 과정입니다.")])],-1))]),e[70]||(e[70]=s(`<section class="installation"><h2 id="install-prerequisites"> 사전 요구 사항 설치 <a class="headerlink" href="#install-prerequisites" title="고정 링크">¶</a></h2><p>일반적인 Freqtrade 설치 과정에서 FreqAI 종속성 설치 여부를 선택할 수 있습니다. FreqAI를 사용하려면 이 질문에 &quot;예&quot;라고 답해야 합니다. 만약 &quot;아니오&quot;를 선택했다면, 다음 명령으로 종속성을 수동으로 설치할 수 있습니다:</p><div class="highlight"><pre><code>pip install -r requirements-freqai.txt</code></pre></div><div class="admonition note"><p class="admonition-title">참고</p><p>Catboost는 라즈베리 파이와 같은 저전력 ARM 기기에서는 설치할 수 없습니다. 해당 플랫폼용 바이너리를 제공하지 않기 때문입니다.</p></div><h3 id="usage-with-docker"> 도커 사용하기 <a class="headerlink" href="#usage-with-docker" title="고정 링크">¶</a></h3><p>도커를 사용하는 경우, FreqAI 종속성이 포함된 전용 태그 <code>:freqai</code>를 사용할 수 있습니다. 도커 컴포즈 파일에서 이미지 줄을 <code>image: freqtradeorg/freqtrade:stable_freqai</code>로 변경하면 됩니다. 이 이미지에는 일반적인 FreqAI 종속성이 모두 포함되어 있습니다. 네이티브 설치와 마찬가지로 Catboost는 ARM 기반 기기에서는 사용할 수 없습니다. PyTorch나 강화학습을 사용하려면 <code>image: freqtradeorg/freqtrade:stable_freqaitorch</code> 또는 <code>image: freqtradeorg/freqtrade:stable_freqairl</code> 태그를 사용해야 합니다.</p><div class="admonition note"><p class="admonition-title">docker-compose-freqai.yml</p><p>FreqAI를 위한 전용 도커 컴포즈 파일이 <code>docker/docker-compose-freqai.yml</code>에 제공됩니다. 이는 <code>docker compose -f docker/docker-compose-freqai.yml run ...</code> 명령으로 실행하거나, 기존 도커 파일을 대체하기 위해 복사하여 사용할 수 있습니다. 이 도커 컴포즈 파일에는 도커 컨테이너 내에서 GPU 리소스를 활성화하기 위한 설정(기본적으로 비활성화됨)도 포함되어 있습니다. 이 기능을 사용하려면 시스템에 GPU가 설치되어 있어야 합니다.</p></div></section><section class="ml-landscape"><h3 id="freqai-position-in-open-source-machine-learning-landscape"> 오픈소스 머신러닝 생태계에서의 FreqAI 위치 <a class="headerlink" href="#freqai-position-in-open-source-machine-learning-landscape" title="고정 링크">¶</a></h3><p> 주식이나 암호화폐 시장과 같은 복잡한 시계열 기반 시스템을 예측하려면 다양한 가설을 테스트하기 위한 다양한 도구가 필요합니다. 다행히도 <code>scikit-learn</code>과 같은 강력한 머신러닝 라이브러리의 최근 발전으로 다양한 연구 가능성이 열렸습니다. 다양한 분야의 연구자들이 이제 수많은 확립된 머신러닝 알고리즘을 쉽게 프로토타이핑할 수 있습니다. 마찬가지로, 이러한 사용자 친화적인 라이브러리는 &quot;시민 과학자&quot;들이 기본적인 Python 기술을 데이터 분석에 활용할 수 있게 합니다. 그러나 이러한 머신러닝 라이브러리를 과거 및 실시간 복잡한 데이터 소스에 적용하는 것은 물류적으로 어렵고 비용이 많이 들 수 있습니다. 또한 강력한 데이터 수집, 저장 및 처리는 별도의 과제를 제시합니다. <a href="#freqai"><code>FreqAI</code></a>는 시장 예측을 위한 적응형 모델링의 실시간 배포를 위한 일반화되고 확장 가능한 오픈 소스 프레임워크를 제공하는 것을 목표로 합니다. <code>FreqAI</code> 프레임워크는 본질적으로 오픈 소스 머신러닝 라이브러리의 풍부한 세계를 위한 테스트 환경입니다. <code>FreqAI</code> 테스트 환경 내에서 사용자는 24/7 복잡한 데이터 소스인 암호화폐 거래소 데이터에 대해 창의적인 가설을 테스트하기 위해 다양한 타사 라이브러리를 결합할 수 있습니다. </p></section><section class="citation"><h3 id="citing-freqai"> FreqAI 인용하기 <a class="headerlink" href="#citing-freqai" title="고정 링크">¶</a></h3><p>FreqAI는 <a href="https://joss.theoj.org/papers/10.21105/joss.04864">오픈 소스 소프트웨어 저널(Journal of Open Source Software)에 게재</a>되었습니다. 연구에서 FreqAI가 유용하다면 다음 인용을 사용해 주세요:</p><div class="highlight"><pre><code>@article{Caulk2022, 
    doi = {10.21105/joss.04864},
    url = {https://doi.org/10.21105/joss.04864},
    year = {2022}, publisher = {The Open Journal},
    volume = {7}, number = {80}, pages = {4864},
    author = {Robert A. Caulk and Elin Törnquist and Matthias Voppichler and Andrew R. Lawless and Ryan McMullan and Wagner Costa Santos and Timothy C. Pogue and Johan van der Vlugt and Stefan P. Gehring and Pascal Schmidt},
    title = {FreqAI: generalizing adaptive modeling for chaotic time-series market forecasts},
    journal = {Journal of Open Source Software} 
}</code></pre></div></section><section class="common-pitfalls"><h2 id="common-pitfalls"> 주요 주의사항 <a class="headerlink" href="#common-pitfalls" title="고정 링크">¶</a></h2><p>FreqAI는 동적 <code>VolumePairlists</code>(거래 쌍을 동적으로 추가하고 제거하는 페어리스트 필터)와 함께 사용할 수 없습니다. 이는 성능상의 이유 때문입니다 - FreqAI는 빠른 예측/재학습에 의존합니다. 이를 효과적으로 수행하기 위해서는 시뮬레이션/실시간 인스턴스 시작 시 모든 학습 데이터를 다운로드해야 합니다. FreqAI는 자동으로 새 캔들을 저장하고 추가하여 향후 재학습을 위해 준비합니다. 즉, 볼륨 페어리스트로 인해 시뮬레이션 실행 중에 나중에 새 거래 쌍이 추가되면 데이터가 준비되어 있지 않을 것입니다. 그러나 FreqAI는 <code>ShufflePairlist</code> 또는 총 페어리스트를 일정하게 유지하는 <code>VolumePairlist</code>(단, 볼륨에 따라 거래 쌍 순서를 재정렬)와는 함께 작동합니다.</p></section><section class="learning-materials"><h2 id="additional-learning-materials"> 추가 학습 자료 <a class="headerlink" href="#additional-learning-materials" title="고정 링크">¶</a></h2><p>FreqAI의 다양한 구성 요소에 대한 더 깊은 이해를 돕는 외부 자료를 모았습니다:</p><ul class="learning-list"><li><a href="https://emergentmethods.medium.com/real-time-head-to-head-adaptive-modeling-of-financial-market-data-using-xgboost-and-catboost-995a115a7495">실시간 직접 비교: XGBoost와 CatBoost를 사용한 금융 시장 데이터의 적응형 모델링</a></li><li><a href="https://emergentmethods.medium.com/freqai-from-price-to-prediction-6fadac18b665">FreqAI - 가격에서 예측까지</a></li></ul></section><section class="support"><h2 id="support"> 지원 <a class="headerlink" href="#support" title="고정 링크">¶</a></h2><p>FreqAI에 대한 지원은 <a href="https://discord.gg/Jd8JYeWHc4">Freqtrade 디스코드</a>, 전용 <a href="https://discord.gg/7AMWACmbjT">FreqAI 디스코드</a>, 그리고 <a href="https://github.com/freqtrade/freqtrade/issues">깃허브 이슈</a>를 통해 받을 수 있습니다.</p></section><section class="credits"><h2 id="credits"> 크레딧 <a class="headerlink" href="#credits" title="고정 링크">¶</a></h2><p>FreqAI는 프로젝트에 특정 기술을 기여한 여러 개발자들에 의해 개발되었습니다.</p><div class="credit-item"><p>개념 및 소프트웨어 개발: Robert Caulk @robcaulk</p><p>이론적 브레인스토밍 및 데이터 분석: Elin Törnquist @th0rntwig</p><p>코드 검토 및 소프트웨어 아키텍처 브레인스토밍: @xmatthias</p><p>소프트웨어 개발: Wagner Costa @wagnercosta, Emre Suzen @aemr3, Timothy Pogue @wizrds</p><p>베타 테스트 및 버그 보고: Stefan Gehring @bloodhunter4rc, @longyu, Andrew Lawless @paranoidandy, Pascal Schmidt @smidelis, Ryan McMullan @smarmau, Juha Nykänen @suikula, Johan van der Vlugt @jooopiert, Richárd Józsa @richardjosza</p></div></section>`,7))])}}};export{j as default};
